{
  "Name": "func_physbox",
  "Pages": [
    {
      "Game": "cs2",
      "EntityType": "Mesh",
      "Name": "func_physbox",
      "Description": "A brush entity that\u0027s physically simulated.",
      "IconPath": "",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Skip pre-settle",
          "InternalName": "skipPreSettle",
          "VariableType": "Bool",
          "Description": "If set this entity will not particpate in the physics pre-settle during compile, but will start awake in game.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Render Mode",
          "InternalName": "rendermode",
          "VariableType": "Choices",
          "Description": "Used to set a non-standard rendering mode on this entity. See also \u0027FX Amount\u0027 and \u0027FX Color\u0027.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Color",
              "Description": ""
            },
            {
              "Name": "Texture",
              "Description": ""
            },
            {
              "Name": "Glow",
              "Description": ""
            },
            {
              "Name": "Solid",
              "Description": ""
            },
            {
              "Name": "Additive",
              "Description": ""
            },
            {
              "Name": "Additive Fractional Frame",
              "Description": ""
            },
            {
              "Name": "World Space Glow",
              "Description": ""
            },
            {
              "Name": "Dont Render",
              "Description": ""
            },
            {
              "Name": "Dev Visualizer",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Render FX",
          "InternalName": "renderfx",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Slow Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Strobe",
              "Description": ""
            },
            {
              "Name": "Fast Strobe",
              "Description": ""
            },
            {
              "Name": "Faster Strobe",
              "Description": ""
            },
            {
              "Name": "Slow Flicker",
              "Description": ""
            },
            {
              "Name": "Fast Flicker",
              "Description": ""
            },
            {
              "Name": "Slow Fade Away",
              "Description": ""
            },
            {
              "Name": "Fast Fade Away",
              "Description": ""
            },
            {
              "Name": "Slow Become Solid",
              "Description": ""
            },
            {
              "Name": "Fast Become Solid",
              "Description": ""
            },
            {
              "Name": "Constant Glow",
              "Description": ""
            },
            {
              "Name": "Distort",
              "Description": ""
            },
            {
              "Name": "Hologram (Distort \u002B fade)",
              "Description": ""
            },
            {
              "Name": "Cull By Distance (TEST)",
              "Description": ""
            },
            {
              "Name": "Spotlight FX",
              "Description": ""
            },
            {
              "Name": "Fade Near",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Amount (0 - 255)",
          "InternalName": "renderamt",
          "VariableType": "Integer",
          "Description": "The FX amount is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Color (R G B)",
          "InternalName": "rendercolor",
          "VariableType": "Color255",
          "Description": "The FX color is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable Receiving Shadows",
          "InternalName": "disablereceiveshadows",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Fade Dist",
          "InternalName": "fademindist",
          "VariableType": "Float",
          "Description": "Distance at which the overlay starts to fade (-1 = subtract from fademaxdist).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "End Fade Dist",
          "InternalName": "fademaxdist",
          "VariableType": "Float",
          "Description": "Maximum distance at which the overlay is visible (0 = don\u0027t fade out).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Culling Behaviour",
          "InternalName": "object_culling",
          "VariableType": "Choices",
          "Description": "Modifies culling behaviour when the object is small / distant",
          "Options": [
            {
              "Name": "Default",
              "Description": ""
            },
            {
              "Name": "Smaller than default",
              "Description": ""
            },
            {
              "Name": "Much smaller than default",
              "Description": ""
            },
            {
              "Name": "When extremely small",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Render to Cubemaps",
          "InternalName": "rendertocubemaps",
          "VariableType": "Bool",
          "Description": "If true, this geometry renders into baked cube maps",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lightmap Static",
          "InternalName": "lightmapstatic",
          "VariableType": "Choices",
          "Description": "Determines if this geometry be considered static \u0026 cast shadows/bounce light when baking lightmaps?",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            },
            {
              "Name": "Bounce Only",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Global Entity Name",
          "InternalName": "globalname",
          "VariableType": "String",
          "Description": "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\u0027s state copied over their state.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent",
          "InternalName": "parentname",
          "VariableType": "TargetDestination",
          "Description": "The name of this entity\u0027s parent in the movement hierarchy. Entities with parents move with their parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent Bone/Attachment Name",
          "InternalName": "parentAttachmentName",
          "VariableType": "ParentAttachment",
          "Description": "The name of the bone or attachment to attach to on the entity\u0027s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment. NOTE: If this is specified the Hammer transform will be disregarded, even if \u0027Use Local Transform\u0027 is NOT specified (in that case local transform will be identity)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Local Transform",
          "InternalName": "useLocalOffset",
          "VariableType": "Bool",
          "Description": "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Origin",
          "InternalName": "local.origin",
          "VariableType": "Vector",
          "Description": "Offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Angles",
          "InternalName": "local.angles",
          "VariableType": "Angle",
          "Description": "Angular offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Scale",
          "InternalName": "local.scales",
          "VariableType": "Vector",
          "Description": "Scale in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Cast Shadows",
          "InternalName": "disableshadows",
          "VariableType": "Choices",
          "Description": "Used to disable shadow casting from this entity.",
          "Options": [
            {
              "Name": "Enabled",
              "Description": ""
            },
            {
              "Name": "No Shadows",
              "Description": ""
            },
            {
              "Name": "Only Realtime Shadows",
              "Description": ""
            },
            {
              "Name": "Only Baked Shadows",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Damage Filter",
          "InternalName": "damagefilter",
          "VariableType": "TargetDestination",
          "Description": "Name of the filter entity that controls which entities can damage us.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Damage",
          "InternalName": "ExplodeDamage",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \u0027Explosion Radius\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Radius",
          "InternalName": "ExplodeRadius",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \u0027Explosion Damage\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Performance Mode",
          "InternalName": "PerformanceMode",
          "VariableType": "Choices",
          "Description": "Used to limit the amount of gibs produced when this entity breaks, for performance reasons.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "No Gibs",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable Client-Side Interpolation",
          "InternalName": "NoInterpolate",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "spawnflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Only Break on Trigger",
              "Description": ""
            },
            {
              "Name": "Break on Touch",
              "Description": ""
            },
            {
              "Name": "Break on Pressure",
              "Description": ""
            },
            {
              "Name": "Break immediately on Physics",
              "Description": ""
            },
            {
              "Name": "Don\u0027t take physics damage",
              "Description": ""
            },
            {
              "Name": "Don\u0027t allow bullet penetration",
              "Description": ""
            },
            {
              "Name": "Don\u0027t allow hand physics damage",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Prop Data",
          "InternalName": "propdata",
          "VariableType": "Choices",
          "Description": "Set to the best approximation of the size and material of this entity\u0027s brushes. If set, it will override this entity\u0027s health and damage taken from various weapons. See the propdata.txt file in the scripts directory of your MOD to get a detailed list of what each entry specifies.",
          "Options": [
            {
              "Name": "None",
              "Description": ""
            },
            {
              "Name": "Wooden.Tiny",
              "Description": ""
            },
            {
              "Name": "Wooden.Small",
              "Description": ""
            },
            {
              "Name": "Wooden.Medium",
              "Description": ""
            },
            {
              "Name": "Wooden.Large",
              "Description": ""
            },
            {
              "Name": "Wooden.Huge",
              "Description": ""
            },
            {
              "Name": "Metal.Small",
              "Description": ""
            },
            {
              "Name": "Metal.Medium",
              "Description": ""
            },
            {
              "Name": "Metal.Large",
              "Description": ""
            },
            {
              "Name": "Cardboard.Small",
              "Description": ""
            },
            {
              "Name": "Cardboard.Medium",
              "Description": ""
            },
            {
              "Name": "Cardboard.Large",
              "Description": ""
            },
            {
              "Name": "Stone.Small",
              "Description": ""
            },
            {
              "Name": "Stone.Medium",
              "Description": ""
            },
            {
              "Name": "Stone.Large",
              "Description": ""
            },
            {
              "Name": "Stone.Huge",
              "Description": ""
            },
            {
              "Name": "Glass.Small",
              "Description": ""
            },
            {
              "Name": "Plastic.Small",
              "Description": ""
            },
            {
              "Name": "Plastic.Medium",
              "Description": ""
            },
            {
              "Name": "Plastic.Large",
              "Description": ""
            },
            {
              "Name": "Pottery.Small",
              "Description": ""
            },
            {
              "Name": "Pottery.Medium",
              "Description": ""
            },
            {
              "Name": "Pottery.Large",
              "Description": ""
            },
            {
              "Name": "Pottery.Huge",
              "Description": ""
            },
            {
              "Name": "Glass.Window",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Strength",
          "InternalName": "health",
          "VariableType": "Integer",
          "Description": "Number of points of damage to take before breaking. 0 means don\u0027t break.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Material Type",
          "InternalName": "material",
          "VariableType": "Choices",
          "Description": "Set to the material type of the brush. Used to decide what sounds to make when damaged, and what gibs to produce when broken.",
          "Options": [
            {
              "Name": "Glass",
              "Description": ""
            },
            {
              "Name": "Wood",
              "Description": ""
            },
            {
              "Name": "Metal",
              "Description": ""
            },
            {
              "Name": "Flesh",
              "Description": ""
            },
            {
              "Name": "CinderBlock",
              "Description": ""
            },
            {
              "Name": "Ceiling Tile",
              "Description": ""
            },
            {
              "Name": "Computer",
              "Description": ""
            },
            {
              "Name": "Unbreakable Glass",
              "Description": ""
            },
            {
              "Name": "Rocks",
              "Description": ""
            },
            {
              "Name": "None",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Gibs Direction",
          "InternalName": "explosion",
          "VariableType": "Choices",
          "Description": "Used to decide which direction to throw gibs when broken.",
          "Options": [
            {
              "Name": "Random",
              "Description": ""
            },
            {
              "Name": "Relative to Attack",
              "Description": ""
            },
            {
              "Name": "Use Precise Gib Dir",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Damaging it Doesn\u0027t Push It",
          "InternalName": "nodamageforces",
          "VariableType": "Bool",
          "Description": "Used to determine whether or not damage should cause the brush to move.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Spawn On Break",
          "InternalName": "spawnobject",
          "VariableType": "Choices",
          "Description": "When broken, an entity of the selected type will be created.",
          "Options": [
            {
              "Name": "",
              "Description": ""
            },
            {
              "Name": "item_battery",
              "Description": ""
            },
            {
              "Name": "item_healthkit",
              "Description": ""
            },
            {
              "Name": "item_ammo_pistol",
              "Description": ""
            },
            {
              "Name": "item_ammo_pistol_large",
              "Description": ""
            },
            {
              "Name": "item_ammo_smg1",
              "Description": ""
            },
            {
              "Name": "item_ammo_smg1_large",
              "Description": ""
            },
            {
              "Name": "item_ammo_ar2",
              "Description": ""
            },
            {
              "Name": "item_ammo_ar2_large",
              "Description": ""
            },
            {
              "Name": "item_box_buckshot",
              "Description": ""
            },
            {
              "Name": "item_flare_round",
              "Description": ""
            },
            {
              "Name": "item_box_flare_rounds",
              "Description": ""
            },
            {
              "Name": "item_ml_grenade",
              "Description": ""
            },
            {
              "Name": "item_smg1_grenade",
              "Description": ""
            },
            {
              "Name": "item_box_sniper_rounds",
              "Description": ""
            },
            {
              "Name": "unused1",
              "Description": ""
            },
            {
              "Name": "weapon_stunstick",
              "Description": ""
            },
            {
              "Name": "weapon_ar1",
              "Description": ""
            },
            {
              "Name": "weapon_ar2",
              "Description": ""
            },
            {
              "Name": "unused2",
              "Description": ""
            },
            {
              "Name": "weapon_ml",
              "Description": ""
            },
            {
              "Name": "weapon_smg1",
              "Description": ""
            },
            {
              "Name": "weapon_smg2",
              "Description": ""
            },
            {
              "Name": "weapon_slam",
              "Description": ""
            },
            {
              "Name": "weapon_shotgun",
              "Description": ""
            },
            {
              "Name": "weapon_molotov",
              "Description": ""
            },
            {
              "Name": "item_dynamic_resupply",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Explode Magnitude",
          "InternalName": "explodemagnitude",
          "VariableType": "Integer",
          "Description": "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Pressure Delay",
          "InternalName": "pressuredelay",
          "VariableType": "Float",
          "Description": "Delay, in seconds, after \u0027broken\u0027 by pressure before breaking apart (allows for sound to play before breaking apart).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum Light Level",
          "InternalName": "_minlight",
          "VariableType": "String",
          "Description": "The minimum level of ambient light that hits this brush.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "spawnflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Debris - Don\u0027t collide with the player or other debris",
              "Description": ""
            },
            {
              "Name": "Motion Disabled",
              "Description": ""
            },
            {
              "Name": "Start Asleep",
              "Description": ""
            },
            {
              "Name": "Prevent motion enable on player bump",
              "Description": ""
            },
            {
              "Name": "Force nav-ignore",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Add Modifier",
          "InternalName": "add_modifier",
          "VariableType": "String",
          "Description": "Will add this modifier when the entity spawns.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Impact Damage Type",
          "InternalName": "Damagetype",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Disabled",
              "Description": ""
            },
            {
              "Name": "Blunt",
              "Description": ""
            },
            {
              "Name": "Sharp",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Mass Override",
          "InternalName": "gamemass",
          "VariableType": "Integer",
          "Description": "Override the mass of the object instead of calculating it based on the size / shape and material.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Mass Scale",
          "InternalName": "massScale",
          "VariableType": "Float",
          "Description": "A scale multiplier for the object\u0027s mass. 0 = use auto-calculated mass based on the object\u0027s size / shape and material",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Center of Mass Offset",
          "InternalName": "masscenteroffset",
          "VariableType": "Vector",
          "Description": "Offset in local space applied to the object\u0027s center of mass.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Buoyancy Scale",
          "InternalName": "buoyancyscale",
          "VariableType": "Float",
          "Description": "Scale on the buoyancy / fluid forces applied to this object",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Health Level to Override Motion",
          "InternalName": "damagetoenablemotion",
          "VariableType": "Integer",
          "Description": "If specified, this object will start motion disabled. Once its health has dropped below this specified amount, it will enable motion.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Physics Impact Force to Override Motion",
          "InternalName": "forcetoenablemotion",
          "VariableType": "Float",
          "Description": "If specified, this object will start motion disabled. Any impact that imparts a force greater than this value on the physbox will enable motion.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Enable \u002BUse Output",
          "InternalName": "enableuseoutput",
          "VariableType": "Bool",
          "Description": "Enables OnPlayerUse output being fired when this object is used",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Strength",
          "InternalName": "health",
          "VariableType": "Integer",
          "Description": "Number of points of damage to take before breaking.  0 means don\u0027t break.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "hoverposeflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Position",
              "Description": ""
            },
            {
              "Name": "Angles",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Player-carry Hover Position",
          "InternalName": "hoverposeposition",
          "VariableType": "Vector",
          "Description": "If the hoverposeflags Position flag is set, this position is the position which the object should move when the player picks it up, with the physgun or \u002BUSE.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Player-carry Hover Angles",
          "InternalName": "hoverposeangles",
          "VariableType": "Vector",
          "Description": "If the hoverposeflags Angles flag is set, this angle is the angle which the object should orient to when the player picks it up, with the physgun or \u002BUSE.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Not solid to world",
          "InternalName": "notsolid",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Solid to World",
              "Description": ""
            },
            {
              "Name": "Passes through World",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Touch Per Entity Refire Delay",
          "InternalName": "touchoutputperentitydelay",
          "VariableType": "Float",
          "Description": "When set to 0 OnStartTouch events are never sent. Otherwise it\u0027s a delay in seconds before another OnStartTouch is sent for the same entity.",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "Alpha",
          "Description": "Set the sprite\u0027s alpha (0 - 255).",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Color",
          "Description": "Set the sprite\u0027s color (R G B).",
          "VariableType": "Color255",
          "Type": "Input"
        },
        {
          "Name": "SetParent",
          "Description": "Changes the entity\u0027s parent in the movement hierarchy.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachment",
          "Description": "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachmentMaintainOffset",
          "Description": "Change this entity to attach to a specific attachment point on it\u0027s parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it\u0027s position relative to the parent at the time it is attached.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearParent",
          "Description": "Removes this entity from the the movement hierarchy, leaving it free to move independently.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FollowEntity",
          "Description": "Bone merges this entity to a parent entity. Call again passing nothing to end the bone merge.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "DisableShadow",
          "Description": "Turn shadow off.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableShadow",
          "Description": "Turn shadow on.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetDamageFilter",
          "Description": "Sets the entity to use as damage filter. Pass in an empty string to clear the damage filter.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillConstrained",
          "Description": "Removes this entity, all its children, and anything constrained to it, from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game. Parameter is the inflictor.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Break",
          "Description": "Breaks the breakable.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetHealth",
          "Description": "Sets a new value for the breakable\u0027s health. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "AddHealth",
          "Description": "Adds health to the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "RemoveHealth",
          "Description": "Removes health from the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetMass",
          "Description": "Set mass of this object.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "OnStartDeath",
          "Description": "Fired when this prop has begun dying (breaking) before other death-related callbacks.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnBreak",
          "Description": "Fired when this breakable breaks.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnHealthChanged",
          "Description": "Fired when the health of this breakable changes, passing the new value of health as a percentage of max health, from [0..1].",
          "VariableType": "Float",
          "Type": "Output"
        },
        {
          "Name": "EnableDamageForces",
          "Description": "Damaging the entity applies physics forces to it.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableDamageForces",
          "Description": "Damaging the entity does *not* apply physics forces to it.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Wake",
          "Description": "Wake up this physics object, if it is sleeping.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Sleep",
          "Description": "Put this physics object to sleep. It will wake if given the Wake input, or if force is applied to it. Note that physics objects go to sleep automatically after coming to rest for a while, so you don\u0027t really need to use this.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableMotion",
          "Description": "Enable physics motion/collision response.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableMotion",
          "Description": "Disable physics motion/collision response.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "ForceDrop",
          "Description": "If this object is being carried by a player, with the physgun or \u002BUSE, force it to be dropped.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnDamaged",
          "Description": "Fired when this entity is damaged.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAwakened",
          "Description": "Fired when this entity becomes awake (collision/force is applied).",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnMotionEnabled",
          "Description": "Fired when motion is enabled due to damage/physcannon/force.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPlayerUse",
          "Description": "Fired when the player tries to \u002BUSE the physbox. This output will fire only if the Generate output on \u002BUSE spawnflag is set.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnStartTouch",
          "Description": "Fired when it touches with another entity. Activator is the other entity.",
          "VariableType": "Void",
          "Type": "Output"
        }
      ]
    },
    {
      "Game": "hla",
      "EntityType": "Mesh",
      "Name": "func_physbox",
      "Description": "A brush entity that\u0027s physically simulated.",
      "IconPath": "",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Skip pre-settle",
          "InternalName": "skipPreSettle",
          "VariableType": "Bool",
          "Description": "If set this entity will not particpate in the physics pre-settle during compile, but will start awake in game.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum CPU Level",
          "InternalName": "mincpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (low)",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Maximum CPU Level",
          "InternalName": "maxcpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (high)",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum GPU Level",
          "InternalName": "mingpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (very low)",
              "Description": ""
            },
            {
              "Name": "very low",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Maximum GPU Level",
          "InternalName": "maxgpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (high)",
              "Description": ""
            },
            {
              "Name": "very low",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable X360",
          "InternalName": "disableX360",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Render Mode",
          "InternalName": "rendermode",
          "VariableType": "Choices",
          "Description": "Used to set a non-standard rendering mode on this entity. See also \u0027FX Amount\u0027 and \u0027FX Color\u0027.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Color",
              "Description": ""
            },
            {
              "Name": "Texture",
              "Description": ""
            },
            {
              "Name": "Glow",
              "Description": ""
            },
            {
              "Name": "Solid",
              "Description": ""
            },
            {
              "Name": "Additive",
              "Description": ""
            },
            {
              "Name": "Additive Fractional Frame",
              "Description": ""
            },
            {
              "Name": "World Space Glow",
              "Description": ""
            },
            {
              "Name": "Dont Render",
              "Description": ""
            },
            {
              "Name": "Dev Visualizer",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Render FX",
          "InternalName": "renderfx",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Slow Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Strobe",
              "Description": ""
            },
            {
              "Name": "Fast Strobe",
              "Description": ""
            },
            {
              "Name": "Faster Strobe",
              "Description": ""
            },
            {
              "Name": "Slow Flicker",
              "Description": ""
            },
            {
              "Name": "Fast Flicker",
              "Description": ""
            },
            {
              "Name": "Slow Fade Away",
              "Description": ""
            },
            {
              "Name": "Fast Fade Away",
              "Description": ""
            },
            {
              "Name": "Slow Become Solid",
              "Description": ""
            },
            {
              "Name": "Fast Become Solid",
              "Description": ""
            },
            {
              "Name": "Constant Glow",
              "Description": ""
            },
            {
              "Name": "Distort",
              "Description": ""
            },
            {
              "Name": "Hologram (Distort \u002B fade)",
              "Description": ""
            },
            {
              "Name": "Cull By Distance (TEST)",
              "Description": ""
            },
            {
              "Name": "Spotlight FX",
              "Description": ""
            },
            {
              "Name": "Fade Near",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Amount (0 - 255)",
          "InternalName": "renderamt",
          "VariableType": "Integer",
          "Description": "The FX amount is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Color (R G B)",
          "InternalName": "rendercolor",
          "VariableType": "Color255",
          "Description": "The FX color is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable Receiving Shadows",
          "InternalName": "disablereceiveshadows",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Light Group",
          "InternalName": "lightgroup",
          "VariableType": "String",
          "Description": "Will only be lit by lights affecting this group.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Fade Dist",
          "InternalName": "fademindist",
          "VariableType": "Float",
          "Description": "Distance at which the overlay starts to fade (\u0026lt;0 = subtract from fademaxdist).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "End Fade Dist",
          "InternalName": "fademaxdist",
          "VariableType": "Float",
          "Description": "Maximum distance at which the overlay is visible (0 = don\u0027t fade out).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Fade Scale",
          "InternalName": "fadescale",
          "VariableType": "Float",
          "Description": "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\u0027t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Render to Cubemaps",
          "InternalName": "rendertocubemaps",
          "VariableType": "Bool",
          "Description": "If true, this geometry renders into baked cube maps",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lightmap Static",
          "InternalName": "lightmapstatic",
          "VariableType": "Choices",
          "Description": "How this geometry influences baked lighting.",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            },
            {
              "Name": "Bounce Only",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Global Entity Name",
          "InternalName": "globalname",
          "VariableType": "String",
          "Description": "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\u0027s state copied over their state.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent",
          "InternalName": "parentname",
          "VariableType": "TargetDestination",
          "Description": "The name of this entity\u0027s parent in the movement hierarchy. Entities with parents move with their parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent Model Bone/Attachment Name",
          "InternalName": "parentAttachmentName",
          "VariableType": "ParentAttachment",
          "Description": "The name of the bone or attachment to attach to on the entity\u0027s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment position offset",
          "InternalName": "local.origin",
          "VariableType": "Vector",
          "Description": "Offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment angular offset",
          "InternalName": "local.angles",
          "VariableType": "Angle",
          "Description": "Angular offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment scale",
          "InternalName": "local.scales",
          "VariableType": "Vector",
          "Description": "Scale in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Model Attachment Offset",
          "InternalName": "useLocalOffset",
          "VariableType": "Bool",
          "Description": "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable shadows",
          "InternalName": "disableshadows",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Damage Filter",
          "InternalName": "damagefilter",
          "VariableType": "TargetDestination",
          "Description": "Name of the filter entity that controls which entities can damage us.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Damage",
          "InternalName": "ExplodeDamage",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \u0027Explosion Radius\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Radius",
          "InternalName": "ExplodeRadius",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \u0027Explosion Damage\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Performance Mode",
          "InternalName": "PerformanceMode",
          "VariableType": "Choices",
          "Description": "Used to limit the amount of gibs produced when this entity breaks, for performance reasons.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "No Gibs",
              "Description": ""
            },
            {
              "Name": "Full Gibs on All Platforms",
              "Description": ""
            },
            {
              "Name": "Reduced gibs",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "spawnflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Only Break on Trigger",
              "Description": ""
            },
            {
              "Name": "Break on Touch",
              "Description": ""
            },
            {
              "Name": "Break on Pressure",
              "Description": ""
            },
            {
              "Name": "Break immediately on Physics",
              "Description": ""
            },
            {
              "Name": "Don\u0027t take physics damage",
              "Description": ""
            },
            {
              "Name": "Don\u0027t allow bullet penetration",
              "Description": ""
            },
            {
              "Name": "Don\u0027t allow hand physics damage",
              "Description": ""
            },
            {
              "Name": "Debris - Don\u0027t collide with the player or other debris",
              "Description": ""
            },
            {
              "Name": "Motion Disabled",
              "Description": ""
            },
            {
              "Name": "Use Preferred Carry Angles",
              "Description": ""
            },
            {
              "Name": "Enable motion on Physcannon grab",
              "Description": ""
            },
            {
              "Name": "Ignore \u002BUSE for Pickup",
              "Description": ""
            },
            {
              "Name": "Generate output on \u002BUSE ",
              "Description": ""
            },
            {
              "Name": "Start Asleep",
              "Description": ""
            },
            {
              "Name": "Physgun is NOT allowed to pick this up.",
              "Description": ""
            },
            {
              "Name": "Physgun is NOT allowed to punt this object.",
              "Description": ""
            },
            {
              "Name": "Prevent motion enable on player bump",
              "Description": ""
            },
            {
              "Name": "Force nav-ignore",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Prop Data",
          "InternalName": "propdata",
          "VariableType": "Choices",
          "Description": "Set to the best approximation of the size and material of this entity\u0027s brushes. If set, it will override this entity\u0027s health and damage taken from various weapons. See the propdata.txt file in the scripts directory of your MOD to get a detailed list of what each entry specifies.",
          "Options": [
            {
              "Name": "None",
              "Description": ""
            },
            {
              "Name": "Wooden.Tiny",
              "Description": ""
            },
            {
              "Name": "Wooden.Small",
              "Description": ""
            },
            {
              "Name": "Wooden.Medium",
              "Description": ""
            },
            {
              "Name": "Wooden.Large",
              "Description": ""
            },
            {
              "Name": "Wooden.Huge",
              "Description": ""
            },
            {
              "Name": "Metal.Small",
              "Description": ""
            },
            {
              "Name": "Metal.Medium",
              "Description": ""
            },
            {
              "Name": "Metal.Large",
              "Description": ""
            },
            {
              "Name": "Cardboard.Small",
              "Description": ""
            },
            {
              "Name": "Cardboard.Medium",
              "Description": ""
            },
            {
              "Name": "Cardboard.Large",
              "Description": ""
            },
            {
              "Name": "Stone.Small",
              "Description": ""
            },
            {
              "Name": "Stone.Medium",
              "Description": ""
            },
            {
              "Name": "Stone.Large",
              "Description": ""
            },
            {
              "Name": "Stone.Huge",
              "Description": ""
            },
            {
              "Name": "Glass.Small",
              "Description": ""
            },
            {
              "Name": "Plastic.Small",
              "Description": ""
            },
            {
              "Name": "Plastic.Medium",
              "Description": ""
            },
            {
              "Name": "Plastic.Large",
              "Description": ""
            },
            {
              "Name": "Pottery.Small",
              "Description": ""
            },
            {
              "Name": "Pottery.Medium",
              "Description": ""
            },
            {
              "Name": "Pottery.Large",
              "Description": ""
            },
            {
              "Name": "Pottery.Huge",
              "Description": ""
            },
            {
              "Name": "Glass.Window",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Strength",
          "InternalName": "health",
          "VariableType": "Integer",
          "Description": "Number of points of damage to take before breaking. 0 means don\u0027t break.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Material Type",
          "InternalName": "material",
          "VariableType": "Choices",
          "Description": "Set to the material type of the brush. Used to decide what sounds to make when damaged, and what gibs to produce when broken.",
          "Options": [
            {
              "Name": "Glass",
              "Description": ""
            },
            {
              "Name": "Wood",
              "Description": ""
            },
            {
              "Name": "Metal",
              "Description": ""
            },
            {
              "Name": "Flesh",
              "Description": ""
            },
            {
              "Name": "CinderBlock",
              "Description": ""
            },
            {
              "Name": "Ceiling Tile",
              "Description": ""
            },
            {
              "Name": "Computer",
              "Description": ""
            },
            {
              "Name": "Unbreakable Glass",
              "Description": ""
            },
            {
              "Name": "Rocks",
              "Description": ""
            },
            {
              "Name": "None",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Gibs Direction",
          "InternalName": "explosion",
          "VariableType": "Choices",
          "Description": "Used to decide which direction to throw gibs when broken.",
          "Options": [
            {
              "Name": "Random",
              "Description": ""
            },
            {
              "Name": "Relative to Attack",
              "Description": ""
            },
            {
              "Name": "Use Precise Gib Dir",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Precise Gib Direction",
          "InternalName": "gibdir",
          "VariableType": "Angle",
          "Description": "Specifies the direction to throw gibs when this breakable breaks. Be sure to select Use Precise Gib Dir in the Gibs Direction field!",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Damaging it Doesn\u0027t Push It",
          "InternalName": "nodamageforces",
          "VariableType": "Bool",
          "Description": "Used to determine whether or not damage should cause the brush to move.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Spawn On Break",
          "InternalName": "spawnobject",
          "VariableType": "Choices",
          "Description": "When broken, an entity of the selected type will be created.",
          "Options": [
            {
              "Name": "item_battery",
              "Description": ""
            },
            {
              "Name": "item_healthkit",
              "Description": ""
            },
            {
              "Name": "item_ammo_pistol",
              "Description": ""
            },
            {
              "Name": "item_ammo_pistol_large",
              "Description": ""
            },
            {
              "Name": "item_ammo_smg1",
              "Description": ""
            },
            {
              "Name": "item_ammo_smg1_large",
              "Description": ""
            },
            {
              "Name": "item_ammo_ar2",
              "Description": ""
            },
            {
              "Name": "item_ammo_ar2_large",
              "Description": ""
            },
            {
              "Name": "item_box_buckshot",
              "Description": ""
            },
            {
              "Name": "item_flare_round",
              "Description": ""
            },
            {
              "Name": "item_box_flare_rounds",
              "Description": ""
            },
            {
              "Name": "item_ml_grenade",
              "Description": ""
            },
            {
              "Name": "item_smg1_grenade",
              "Description": ""
            },
            {
              "Name": "item_box_sniper_rounds",
              "Description": ""
            },
            {
              "Name": "unused1",
              "Description": ""
            },
            {
              "Name": "weapon_stunstick",
              "Description": ""
            },
            {
              "Name": "weapon_ar1",
              "Description": ""
            },
            {
              "Name": "weapon_ar2",
              "Description": ""
            },
            {
              "Name": "unused2",
              "Description": ""
            },
            {
              "Name": "weapon_ml",
              "Description": ""
            },
            {
              "Name": "weapon_smg1",
              "Description": ""
            },
            {
              "Name": "weapon_smg2",
              "Description": ""
            },
            {
              "Name": "weapon_slam",
              "Description": ""
            },
            {
              "Name": "weapon_shotgun",
              "Description": ""
            },
            {
              "Name": "weapon_molotov",
              "Description": ""
            },
            {
              "Name": "item_dynamic_resupply",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Explode Magnitude",
          "InternalName": "explodemagnitude",
          "VariableType": "Integer",
          "Description": "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Pressure Delay",
          "InternalName": "pressuredelay",
          "VariableType": "Float",
          "Description": "Delay, in seconds, after \u0027broken\u0027 by pressure before breaking apart (allows for sound to play before breaking apart).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum Light Level",
          "InternalName": "_minlight",
          "VariableType": "String",
          "Description": "The minimum level of ambient light that hits this brush.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Impact Damage Type",
          "InternalName": "Damagetype",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Disabled",
              "Description": ""
            },
            {
              "Name": "Blunt",
              "Description": ""
            },
            {
              "Name": "Sharp",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Mass Scale",
          "InternalName": "massScale",
          "VariableType": "Float",
          "Description": "A scale multiplier for the object\u0027s mass.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Health Level to Override Motion",
          "InternalName": "damagetoenablemotion",
          "VariableType": "Integer",
          "Description": "If specified, this object will start motion disabled. Once its health has dropped below this specified amount, it will enable motion.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Physics Impact Force to Override Motion",
          "InternalName": "forcetoenablemotion",
          "VariableType": "Float",
          "Description": "If specified, this object will start motion disabled. Any impact that imparts a force greater than this value on the physbox will enable motion.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Preferred Player-carry Angles",
          "InternalName": "preferredcarryangles",
          "VariableType": "Vector",
          "Description": "If the \u0027Use Preferred Carry Angles\u0027 spawnflag is set, this angle is the angle which the object should orient to when the player picks it up, with the physgun or \u002BUSE.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Not solid to world",
          "InternalName": "notsolid",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Solid to World",
              "Description": ""
            },
            {
              "Name": "Passes through World",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Exploitable by Player",
          "InternalName": "ExploitableByPlayer",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Default",
              "Description": ""
            },
            {
              "Name": "Explosive",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Touch Per Entity Refire Delay",
          "InternalName": "touchoutputperentitydelay",
          "VariableType": "Float",
          "Description": "When set to 0 OnStartTouch events are never sent. Otherwise it\u0027s a delay in seconds before another OnStartTouch is sent for the same entity.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Bias Lighting Origin Towards Player",
          "InternalName": "fixup_lighting_origin_to_player_side",
          "VariableType": "Bool",
          "Description": "For windows and doors and other dynamic things that straddle lighting volume boundaries - bias the lighting origin toward whichever side the local player is on",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "Alpha",
          "Description": "Set the sprite\u0027s alpha (0 - 255).",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Color",
          "Description": "Set the sprite\u0027s color (R G B).",
          "VariableType": "Color255",
          "Type": "Input"
        },
        {
          "Name": "SetParent",
          "Description": "Changes the entity\u0027s parent in the movement hierarchy.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachment",
          "Description": "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachmentMaintainOffset",
          "Description": "Change this entity to attach to a specific attachment point on it\u0027s parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it\u0027s position relative to the parent at the time it is attached.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearParent",
          "Description": "Removes this entity from the the movement hierarchy, leaving it free to move independently.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableShadow",
          "Description": "Turn shadow off.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableShadow",
          "Description": "Turn shadow on.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetDamageFilter",
          "Description": "Sets the entity to use as damage filter. Pass in an empty string to clear the damage filter.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Break",
          "Description": "Breaks the breakable.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetHealth",
          "Description": "Sets a new value for the breakable\u0027s health. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "AddHealth",
          "Description": "Adds health to the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "RemoveHealth",
          "Description": "Removes health from the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetMass",
          "Description": "Set mass of this object.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "OnBreak",
          "Description": "Fired when this breakable breaks.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnHealthChanged",
          "Description": "Fired when the health of this breakable changes, passing the new value of health as a percentage of max health, from [0..1].",
          "VariableType": "Float",
          "Type": "Output"
        },
        {
          "Name": "EnableDamageForces",
          "Description": "Damaging the entity applies physics forces to it.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableDamageForces",
          "Description": "Damaging the entity does *not* apply physics forces to it.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Wake",
          "Description": "Wake up this physics object, if it is sleeping.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Sleep",
          "Description": "Put this physics object to sleep. It will wake if given the Wake input, or if force is applied to it. Note that physics objects go to sleep automatically after coming to rest for a while, so you don\u0027t really need to use this.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableMotion",
          "Description": "Enable physics motion/collision response.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableMotion",
          "Description": "Disable physics motion/collision response.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "ForceDrop",
          "Description": "If this object is being carried by a player, with the physgun or \u002BUSE, force it to be dropped.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableFloating",
          "Description": "Turn off floating simulation (and cost).",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnDamaged",
          "Description": "Fired when this entity is damaged.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAwakened",
          "Description": "Fired when this entity becomes awake (collision/force is applied).",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnMotionEnabled",
          "Description": "Fired when motion is enabled due to damage/physcannon/force.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysGunPickup",
          "Description": "Fired when a player picks this object up, either with the physgun or \u002BUSE.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysGunPunt",
          "Description": "Fired when a player punts this object with the physgun.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysGunOnlyPickup",
          "Description": "Fired when a player picks this object up WITH THE PHYSGUN. \u002BUSE pickups do not fire this output.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysGunDrop",
          "Description": "Fired when a player drops this object.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPlayerUse",
          "Description": "Fired when the player tries to \u002BUSE the physbox. This output will fire only if the Generate output on \u002BUSE spawnflag is set.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnStartTouch",
          "Description": "Fired when it touches with another entity. Activator is the other entity.",
          "VariableType": "Void",
          "Type": "Output"
        }
      ]
    },
    {
      "Game": "dota2",
      "EntityType": "Mesh",
      "Name": "func_physbox",
      "Description": "A brush entity that\u0027s physically simulated.",
      "IconPath": "",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Skip pre-settle",
          "InternalName": "skipPreSettle",
          "VariableType": "Bool",
          "Description": "If set this entity will not particpate in the physics pre-settle during compile, but will start awake in game.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Render Mode",
          "InternalName": "rendermode",
          "VariableType": "Choices",
          "Description": "Used to set a non-standard rendering mode on this entity. See also \u0027FX Amount\u0027 and \u0027FX Color\u0027.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Color",
              "Description": ""
            },
            {
              "Name": "Texture",
              "Description": ""
            },
            {
              "Name": "Glow",
              "Description": ""
            },
            {
              "Name": "Solid",
              "Description": ""
            },
            {
              "Name": "Additive",
              "Description": ""
            },
            {
              "Name": "Additive Fractional Frame",
              "Description": ""
            },
            {
              "Name": "World Space Glow",
              "Description": ""
            },
            {
              "Name": "Dont Render",
              "Description": ""
            },
            {
              "Name": "Dev Visualizer",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Render FX",
          "InternalName": "renderfx",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Slow Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Strobe",
              "Description": ""
            },
            {
              "Name": "Fast Strobe",
              "Description": ""
            },
            {
              "Name": "Faster Strobe",
              "Description": ""
            },
            {
              "Name": "Slow Flicker",
              "Description": ""
            },
            {
              "Name": "Fast Flicker",
              "Description": ""
            },
            {
              "Name": "Slow Fade Away",
              "Description": ""
            },
            {
              "Name": "Fast Fade Away",
              "Description": ""
            },
            {
              "Name": "Slow Become Solid",
              "Description": ""
            },
            {
              "Name": "Fast Become Solid",
              "Description": ""
            },
            {
              "Name": "Constant Glow",
              "Description": ""
            },
            {
              "Name": "Distort",
              "Description": ""
            },
            {
              "Name": "Hologram (Distort \u002B fade)",
              "Description": ""
            },
            {
              "Name": "Cull By Distance (TEST)",
              "Description": ""
            },
            {
              "Name": "Spotlight FX",
              "Description": ""
            },
            {
              "Name": "Fade Near",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Amount (0 - 255)",
          "InternalName": "renderamt",
          "VariableType": "Integer",
          "Description": "The FX amount is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Color (R G B)",
          "InternalName": "rendercolor",
          "VariableType": "Color255",
          "Description": "The FX color is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable Receiving Shadows",
          "InternalName": "disablereceiveshadows",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Fade Dist",
          "InternalName": "fademindist",
          "VariableType": "Float",
          "Description": "Distance at which the overlay starts to fade (-1 = subtract from fademaxdist).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "End Fade Dist",
          "InternalName": "fademaxdist",
          "VariableType": "Float",
          "Description": "Maximum distance at which the overlay is visible (0 = don\u0027t fade out).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Culling Behaviour",
          "InternalName": "object_culling",
          "VariableType": "Choices",
          "Description": "Modifies culling behaviour when the object is small / distant",
          "Options": [
            {
              "Name": "Default",
              "Description": ""
            },
            {
              "Name": "Smaller than default",
              "Description": ""
            },
            {
              "Name": "Much smaller than default",
              "Description": ""
            },
            {
              "Name": "When extremely small",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Render to Cubemaps",
          "InternalName": "rendertocubemaps",
          "VariableType": "Bool",
          "Description": "If true, this geometry renders into baked cube maps",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lightmap Static",
          "InternalName": "lightmapstatic",
          "VariableType": "Choices",
          "Description": "Determines if this geometry be considered static \u0026 cast shadows/bounce light when baking lightmaps?",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            },
            {
              "Name": "Bounce Only",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Global Entity Name",
          "InternalName": "globalname",
          "VariableType": "String",
          "Description": "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\u0027s state copied over their state.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent",
          "InternalName": "parentname",
          "VariableType": "TargetDestination",
          "Description": "The name of this entity\u0027s parent in the movement hierarchy. Entities with parents move with their parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent Bone/Attachment Name",
          "InternalName": "parentAttachmentName",
          "VariableType": "ParentAttachment",
          "Description": "The name of the bone or attachment to attach to on the entity\u0027s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment. NOTE: If this is specified the Hammer transform will be disregarded, even if \u0027Use Local Transform\u0027 is NOT specified (in that case local transform will be identity)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Local Transform",
          "InternalName": "useLocalOffset",
          "VariableType": "Bool",
          "Description": "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Origin",
          "InternalName": "local.origin",
          "VariableType": "Vector",
          "Description": "Offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Angles",
          "InternalName": "local.angles",
          "VariableType": "Angle",
          "Description": "Angular offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Scale",
          "InternalName": "local.scales",
          "VariableType": "Vector",
          "Description": "Scale in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Cast Shadows",
          "InternalName": "disableshadows",
          "VariableType": "Choices",
          "Description": "Used to disable shadow casting from this entity.",
          "Options": [
            {
              "Name": "Enabled",
              "Description": ""
            },
            {
              "Name": "No Shadows",
              "Description": ""
            },
            {
              "Name": "Only Realtime Shadows",
              "Description": ""
            },
            {
              "Name": "Only Baked Shadows",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Damage Filter",
          "InternalName": "damagefilter",
          "VariableType": "TargetDestination",
          "Description": "Name of the filter entity that controls which entities can damage us.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Damage",
          "InternalName": "ExplodeDamage",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \u0027Explosion Radius\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Radius",
          "InternalName": "ExplodeRadius",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \u0027Explosion Damage\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Performance Mode",
          "InternalName": "PerformanceMode",
          "VariableType": "Choices",
          "Description": "Used to limit the amount of gibs produced when this entity breaks, for performance reasons.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "No Gibs",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable Client-Side Interpolation",
          "InternalName": "NoInterpolate",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "spawnflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Only Break on Trigger",
              "Description": ""
            },
            {
              "Name": "Break on Touch",
              "Description": ""
            },
            {
              "Name": "Break on Pressure",
              "Description": ""
            },
            {
              "Name": "Break immediately on Physics",
              "Description": ""
            },
            {
              "Name": "Don\u0027t take physics damage",
              "Description": ""
            },
            {
              "Name": "Don\u0027t allow bullet penetration",
              "Description": ""
            },
            {
              "Name": "Don\u0027t allow hand physics damage",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Prop Data",
          "InternalName": "propdata",
          "VariableType": "Choices",
          "Description": "Set to the best approximation of the size and material of this entity\u0027s brushes. If set, it will override this entity\u0027s health and damage taken from various weapons. See the propdata.txt file in the scripts directory of your MOD to get a detailed list of what each entry specifies.",
          "Options": [
            {
              "Name": "None",
              "Description": ""
            },
            {
              "Name": "Wooden.Tiny",
              "Description": ""
            },
            {
              "Name": "Wooden.Small",
              "Description": ""
            },
            {
              "Name": "Wooden.Medium",
              "Description": ""
            },
            {
              "Name": "Wooden.Large",
              "Description": ""
            },
            {
              "Name": "Wooden.Huge",
              "Description": ""
            },
            {
              "Name": "Metal.Small",
              "Description": ""
            },
            {
              "Name": "Metal.Medium",
              "Description": ""
            },
            {
              "Name": "Metal.Large",
              "Description": ""
            },
            {
              "Name": "Cardboard.Small",
              "Description": ""
            },
            {
              "Name": "Cardboard.Medium",
              "Description": ""
            },
            {
              "Name": "Cardboard.Large",
              "Description": ""
            },
            {
              "Name": "Stone.Small",
              "Description": ""
            },
            {
              "Name": "Stone.Medium",
              "Description": ""
            },
            {
              "Name": "Stone.Large",
              "Description": ""
            },
            {
              "Name": "Stone.Huge",
              "Description": ""
            },
            {
              "Name": "Glass.Small",
              "Description": ""
            },
            {
              "Name": "Plastic.Small",
              "Description": ""
            },
            {
              "Name": "Plastic.Medium",
              "Description": ""
            },
            {
              "Name": "Plastic.Large",
              "Description": ""
            },
            {
              "Name": "Pottery.Small",
              "Description": ""
            },
            {
              "Name": "Pottery.Medium",
              "Description": ""
            },
            {
              "Name": "Pottery.Large",
              "Description": ""
            },
            {
              "Name": "Pottery.Huge",
              "Description": ""
            },
            {
              "Name": "Glass.Window",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Strength",
          "InternalName": "health",
          "VariableType": "Integer",
          "Description": "Number of points of damage to take before breaking. 0 means don\u0027t break.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Material Type",
          "InternalName": "material",
          "VariableType": "Choices",
          "Description": "Set to the material type of the brush. Used to decide what sounds to make when damaged, and what gibs to produce when broken.",
          "Options": [
            {
              "Name": "Glass",
              "Description": ""
            },
            {
              "Name": "Wood",
              "Description": ""
            },
            {
              "Name": "Metal",
              "Description": ""
            },
            {
              "Name": "Flesh",
              "Description": ""
            },
            {
              "Name": "CinderBlock",
              "Description": ""
            },
            {
              "Name": "Ceiling Tile",
              "Description": ""
            },
            {
              "Name": "Computer",
              "Description": ""
            },
            {
              "Name": "Unbreakable Glass",
              "Description": ""
            },
            {
              "Name": "Rocks",
              "Description": ""
            },
            {
              "Name": "None",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Gibs Direction",
          "InternalName": "explosion",
          "VariableType": "Choices",
          "Description": "Used to decide which direction to throw gibs when broken.",
          "Options": [
            {
              "Name": "Random",
              "Description": ""
            },
            {
              "Name": "Relative to Attack",
              "Description": ""
            },
            {
              "Name": "Use Precise Gib Dir",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Damaging it Doesn\u0027t Push It",
          "InternalName": "nodamageforces",
          "VariableType": "Bool",
          "Description": "Used to determine whether or not damage should cause the brush to move.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Spawn On Break",
          "InternalName": "spawnobject",
          "VariableType": "Choices",
          "Description": "When broken, an entity of the selected type will be created.",
          "Options": [
            {
              "Name": "",
              "Description": ""
            },
            {
              "Name": "item_battery",
              "Description": ""
            },
            {
              "Name": "item_healthkit",
              "Description": ""
            },
            {
              "Name": "item_ammo_pistol",
              "Description": ""
            },
            {
              "Name": "item_ammo_pistol_large",
              "Description": ""
            },
            {
              "Name": "item_ammo_smg1",
              "Description": ""
            },
            {
              "Name": "item_ammo_smg1_large",
              "Description": ""
            },
            {
              "Name": "item_ammo_ar2",
              "Description": ""
            },
            {
              "Name": "item_ammo_ar2_large",
              "Description": ""
            },
            {
              "Name": "item_box_buckshot",
              "Description": ""
            },
            {
              "Name": "item_flare_round",
              "Description": ""
            },
            {
              "Name": "item_box_flare_rounds",
              "Description": ""
            },
            {
              "Name": "item_ml_grenade",
              "Description": ""
            },
            {
              "Name": "item_smg1_grenade",
              "Description": ""
            },
            {
              "Name": "item_box_sniper_rounds",
              "Description": ""
            },
            {
              "Name": "unused1",
              "Description": ""
            },
            {
              "Name": "weapon_stunstick",
              "Description": ""
            },
            {
              "Name": "weapon_ar1",
              "Description": ""
            },
            {
              "Name": "weapon_ar2",
              "Description": ""
            },
            {
              "Name": "unused2",
              "Description": ""
            },
            {
              "Name": "weapon_ml",
              "Description": ""
            },
            {
              "Name": "weapon_smg1",
              "Description": ""
            },
            {
              "Name": "weapon_smg2",
              "Description": ""
            },
            {
              "Name": "weapon_slam",
              "Description": ""
            },
            {
              "Name": "weapon_shotgun",
              "Description": ""
            },
            {
              "Name": "weapon_molotov",
              "Description": ""
            },
            {
              "Name": "item_dynamic_resupply",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Explode Magnitude",
          "InternalName": "explodemagnitude",
          "VariableType": "Integer",
          "Description": "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Pressure Delay",
          "InternalName": "pressuredelay",
          "VariableType": "Float",
          "Description": "Delay, in seconds, after \u0027broken\u0027 by pressure before breaking apart (allows for sound to play before breaking apart).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum Light Level",
          "InternalName": "_minlight",
          "VariableType": "String",
          "Description": "The minimum level of ambient light that hits this brush.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "spawnflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Debris - Don\u0027t collide with the player or other debris",
              "Description": ""
            },
            {
              "Name": "Motion Disabled",
              "Description": ""
            },
            {
              "Name": "Start Asleep",
              "Description": ""
            },
            {
              "Name": "Prevent motion enable on player bump",
              "Description": ""
            },
            {
              "Name": "Force nav-ignore",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Add Modifier",
          "InternalName": "add_modifier",
          "VariableType": "String",
          "Description": "Will add this modifier when the entity spawns.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Impact Damage Type",
          "InternalName": "Damagetype",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Disabled",
              "Description": ""
            },
            {
              "Name": "Blunt",
              "Description": ""
            },
            {
              "Name": "Sharp",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Mass Override",
          "InternalName": "gamemass",
          "VariableType": "Integer",
          "Description": "Override the mass of the object instead of calculating it based on the size / shape and material.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Mass Scale",
          "InternalName": "massScale",
          "VariableType": "Float",
          "Description": "A scale multiplier for the object\u0027s mass. 0 = use auto-calculated mass based on the object\u0027s size / shape and material",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Center of Mass Offset",
          "InternalName": "masscenteroffset",
          "VariableType": "Vector",
          "Description": "Offset in local space applied to the object\u0027s center of mass.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Buoyancy Scale",
          "InternalName": "buoyancyscale",
          "VariableType": "Float",
          "Description": "Scale on the buoyancy / fluid forces applied to this object",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Health Level to Override Motion",
          "InternalName": "damagetoenablemotion",
          "VariableType": "Integer",
          "Description": "If specified, this object will start motion disabled. Once its health has dropped below this specified amount, it will enable motion.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Physics Impact Force to Override Motion",
          "InternalName": "forcetoenablemotion",
          "VariableType": "Float",
          "Description": "If specified, this object will start motion disabled. Any impact that imparts a force greater than this value on the physbox will enable motion.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Enable \u002BUse Output",
          "InternalName": "enableuseoutput",
          "VariableType": "Bool",
          "Description": "Enables OnPlayerUse output being fired when this object is used",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Strength",
          "InternalName": "health",
          "VariableType": "Integer",
          "Description": "Number of points of damage to take before breaking.  0 means don\u0027t break.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "hoverposeflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Position",
              "Description": ""
            },
            {
              "Name": "Angles",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Player-carry Hover Position",
          "InternalName": "hoverposeposition",
          "VariableType": "Vector",
          "Description": "If the hoverposeflags Position flag is set, this position is the position which the object should move when the player picks it up, with the physgun or \u002BUSE.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Player-carry Hover Angles",
          "InternalName": "hoverposeangles",
          "VariableType": "Vector",
          "Description": "If the hoverposeflags Angles flag is set, this angle is the angle which the object should orient to when the player picks it up, with the physgun or \u002BUSE.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Not solid to world",
          "InternalName": "notsolid",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Solid to World",
              "Description": ""
            },
            {
              "Name": "Passes through World",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Touch Per Entity Refire Delay",
          "InternalName": "touchoutputperentitydelay",
          "VariableType": "Float",
          "Description": "When set to 0 OnStartTouch events are never sent. Otherwise it\u0027s a delay in seconds before another OnStartTouch is sent for the same entity.",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "Alpha",
          "Description": "Set the sprite\u0027s alpha (0 - 255).",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Color",
          "Description": "Set the sprite\u0027s color (R G B).",
          "VariableType": "Color255",
          "Type": "Input"
        },
        {
          "Name": "SetParent",
          "Description": "Changes the entity\u0027s parent in the movement hierarchy.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachment",
          "Description": "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachmentMaintainOffset",
          "Description": "Change this entity to attach to a specific attachment point on it\u0027s parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it\u0027s position relative to the parent at the time it is attached.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearParent",
          "Description": "Removes this entity from the the movement hierarchy, leaving it free to move independently.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FollowEntity",
          "Description": "Bone merges this entity to a parent entity. Call again passing nothing to end the bone merge.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "DisableShadow",
          "Description": "Turn shadow off.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableShadow",
          "Description": "Turn shadow on.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetDamageFilter",
          "Description": "Sets the entity to use as damage filter. Pass in an empty string to clear the damage filter.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillConstrained",
          "Description": "Removes this entity, all its children, and anything constrained to it, from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game. Parameter is the inflictor.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Break",
          "Description": "Breaks the breakable.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetHealth",
          "Description": "Sets a new value for the breakable\u0027s health. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "AddHealth",
          "Description": "Adds health to the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "RemoveHealth",
          "Description": "Removes health from the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetMass",
          "Description": "Set mass of this object.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "OnStartDeath",
          "Description": "Fired when this prop has begun dying (breaking) before other death-related callbacks.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnBreak",
          "Description": "Fired when this breakable breaks.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnHealthChanged",
          "Description": "Fired when the health of this breakable changes, passing the new value of health as a percentage of max health, from [0..1].",
          "VariableType": "Float",
          "Type": "Output"
        },
        {
          "Name": "EnableDamageForces",
          "Description": "Damaging the entity applies physics forces to it.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableDamageForces",
          "Description": "Damaging the entity does *not* apply physics forces to it.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Wake",
          "Description": "Wake up this physics object, if it is sleeping.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Sleep",
          "Description": "Put this physics object to sleep. It will wake if given the Wake input, or if force is applied to it. Note that physics objects go to sleep automatically after coming to rest for a while, so you don\u0027t really need to use this.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableMotion",
          "Description": "Enable physics motion/collision response.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableMotion",
          "Description": "Disable physics motion/collision response.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "ForceDrop",
          "Description": "If this object is being carried by a player, with the physgun or \u002BUSE, force it to be dropped.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnDamaged",
          "Description": "Fired when this entity is damaged.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAwakened",
          "Description": "Fired when this entity becomes awake (collision/force is applied).",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnMotionEnabled",
          "Description": "Fired when motion is enabled due to damage/physcannon/force.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPlayerUse",
          "Description": "Fired when the player tries to \u002BUSE the physbox. This output will fire only if the Generate output on \u002BUSE spawnflag is set.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnStartTouch",
          "Description": "Fired when it touches with another entity. Activator is the other entity.",
          "VariableType": "Void",
          "Type": "Output"
        }
      ]
    },
    {
      "Game": "steamvr",
      "EntityType": "Mesh",
      "Name": "func_physbox",
      "Description": "A brush entity that\u0027s physically simulated.",
      "IconPath": "",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Skip pre-settle",
          "InternalName": "skipPreSettle",
          "VariableType": "Bool",
          "Description": "If set this entity will not particpate in the physics pre-settle during compile, but will start awake in game.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum CPU Level",
          "InternalName": "mincpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (low)",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Maximum CPU Level",
          "InternalName": "maxcpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (high)",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum GPU Level",
          "InternalName": "mingpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (very low)",
              "Description": ""
            },
            {
              "Name": "very low",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Maximum GPU Level",
          "InternalName": "maxgpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (high)",
              "Description": ""
            },
            {
              "Name": "very low",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable X360",
          "InternalName": "disableX360",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Render Mode",
          "InternalName": "rendermode",
          "VariableType": "Choices",
          "Description": "Used to set a non-standard rendering mode on this entity. See also \u0027FX Amount\u0027 and \u0027FX Color\u0027.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Color",
              "Description": ""
            },
            {
              "Name": "Texture",
              "Description": ""
            },
            {
              "Name": "Glow",
              "Description": ""
            },
            {
              "Name": "Solid",
              "Description": ""
            },
            {
              "Name": "Additive",
              "Description": ""
            },
            {
              "Name": "Additive Fractional Frame",
              "Description": ""
            },
            {
              "Name": "World Space Glow",
              "Description": ""
            },
            {
              "Name": "Dont Render",
              "Description": ""
            },
            {
              "Name": "Dev Visualizer",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Render FX",
          "InternalName": "renderfx",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Slow Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Strobe",
              "Description": ""
            },
            {
              "Name": "Fast Strobe",
              "Description": ""
            },
            {
              "Name": "Faster Strobe",
              "Description": ""
            },
            {
              "Name": "Slow Flicker",
              "Description": ""
            },
            {
              "Name": "Fast Flicker",
              "Description": ""
            },
            {
              "Name": "Slow Fade Away",
              "Description": ""
            },
            {
              "Name": "Fast Fade Away",
              "Description": ""
            },
            {
              "Name": "Slow Become Solid",
              "Description": ""
            },
            {
              "Name": "Fast Become Solid",
              "Description": ""
            },
            {
              "Name": "Constant Glow",
              "Description": ""
            },
            {
              "Name": "Distort",
              "Description": ""
            },
            {
              "Name": "Hologram (Distort \u002B fade)",
              "Description": ""
            },
            {
              "Name": "Cull By Distance (TEST)",
              "Description": ""
            },
            {
              "Name": "Spotlight FX",
              "Description": ""
            },
            {
              "Name": "Fade Near",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Amount (0 - 255)",
          "InternalName": "renderamt",
          "VariableType": "Integer",
          "Description": "The FX amount is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Color (R G B)",
          "InternalName": "rendercolor",
          "VariableType": "Color255",
          "Description": "The FX color is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable Receiving Shadows",
          "InternalName": "disablereceiveshadows",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Light Group",
          "InternalName": "lightgroup",
          "VariableType": "String",
          "Description": "Will only be lit by lights affecting this group.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Fade Dist",
          "InternalName": "fademindist",
          "VariableType": "Float",
          "Description": "Distance at which the overlay starts to fade (\u0026lt;0 = subtract from fademaxdist).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "End Fade Dist",
          "InternalName": "fademaxdist",
          "VariableType": "Float",
          "Description": "Maximum distance at which the overlay is visible (0 = don\u0027t fade out).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Fade Scale",
          "InternalName": "fadescale",
          "VariableType": "Float",
          "Description": "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\u0027t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Render to Cubemaps",
          "InternalName": "rendertocubemaps",
          "VariableType": "Bool",
          "Description": "If true, this geometry renders into baked cube maps",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lightmap Static",
          "InternalName": "lightmapstatic",
          "VariableType": "Choices",
          "Description": "How this geometry influences baked lighting.",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            },
            {
              "Name": "Bounce Only",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Global Entity Name",
          "InternalName": "globalname",
          "VariableType": "String",
          "Description": "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\u0027s state copied over their state.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent",
          "InternalName": "parentname",
          "VariableType": "TargetDestination",
          "Description": "The name of this entity\u0027s parent in the movement hierarchy. Entities with parents move with their parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent Model Bone/Attachment Name",
          "InternalName": "parentAttachmentName",
          "VariableType": "ParentAttachment",
          "Description": "The name of the bone or attachment to attach to on the entity\u0027s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment position offset",
          "InternalName": "local.origin",
          "VariableType": "Vector",
          "Description": "Offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment angular offset",
          "InternalName": "local.angles",
          "VariableType": "Angle",
          "Description": "Angular offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment scale",
          "InternalName": "local.scales",
          "VariableType": "Vector",
          "Description": "Scale in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Model Attachment Offset",
          "InternalName": "useLocalOffset",
          "VariableType": "Bool",
          "Description": "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable shadows",
          "InternalName": "disableshadows",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Damage Filter",
          "InternalName": "damagefilter",
          "VariableType": "TargetDestination",
          "Description": "Name of the filter entity that controls which entities can damage us.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Damage",
          "InternalName": "ExplodeDamage",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \u0027Explosion Radius\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Radius",
          "InternalName": "ExplodeRadius",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \u0027Explosion Damage\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Performance Mode",
          "InternalName": "PerformanceMode",
          "VariableType": "Choices",
          "Description": "Used to limit the amount of gibs produced when this entity breaks, for performance reasons.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "No Gibs",
              "Description": ""
            },
            {
              "Name": "Full Gibs on All Platforms",
              "Description": ""
            },
            {
              "Name": "Reduced gibs",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "spawnflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Only Break on Trigger",
              "Description": ""
            },
            {
              "Name": "Break on Touch",
              "Description": ""
            },
            {
              "Name": "Break on Pressure",
              "Description": ""
            },
            {
              "Name": "Break immediately on Physics",
              "Description": ""
            },
            {
              "Name": "Don\u0027t take physics damage",
              "Description": ""
            },
            {
              "Name": "Don\u0027t allow bullet penetration",
              "Description": ""
            },
            {
              "Name": "Don\u0027t allow hand physics damage",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Prop Data",
          "InternalName": "propdata",
          "VariableType": "Choices",
          "Description": "Set to the best approximation of the size and material of this entity\u0027s brushes. If set, it will override this entity\u0027s health and damage taken from various weapons. See the propdata.txt file in the scripts directory of your MOD to get a detailed list of what each entry specifies.",
          "Options": [
            {
              "Name": "None",
              "Description": ""
            },
            {
              "Name": "Wooden.Tiny",
              "Description": ""
            },
            {
              "Name": "Wooden.Small",
              "Description": ""
            },
            {
              "Name": "Wooden.Medium",
              "Description": ""
            },
            {
              "Name": "Wooden.Large",
              "Description": ""
            },
            {
              "Name": "Wooden.Huge",
              "Description": ""
            },
            {
              "Name": "Metal.Small",
              "Description": ""
            },
            {
              "Name": "Metal.Medium",
              "Description": ""
            },
            {
              "Name": "Metal.Large",
              "Description": ""
            },
            {
              "Name": "Cardboard.Small",
              "Description": ""
            },
            {
              "Name": "Cardboard.Medium",
              "Description": ""
            },
            {
              "Name": "Cardboard.Large",
              "Description": ""
            },
            {
              "Name": "Stone.Small",
              "Description": ""
            },
            {
              "Name": "Stone.Medium",
              "Description": ""
            },
            {
              "Name": "Stone.Large",
              "Description": ""
            },
            {
              "Name": "Stone.Huge",
              "Description": ""
            },
            {
              "Name": "Glass.Small",
              "Description": ""
            },
            {
              "Name": "Plastic.Small",
              "Description": ""
            },
            {
              "Name": "Plastic.Medium",
              "Description": ""
            },
            {
              "Name": "Plastic.Large",
              "Description": ""
            },
            {
              "Name": "Pottery.Small",
              "Description": ""
            },
            {
              "Name": "Pottery.Medium",
              "Description": ""
            },
            {
              "Name": "Pottery.Large",
              "Description": ""
            },
            {
              "Name": "Pottery.Huge",
              "Description": ""
            },
            {
              "Name": "Glass.Window",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Strength",
          "InternalName": "health",
          "VariableType": "Integer",
          "Description": "Number of points of damage to take before breaking. 0 means don\u0027t break.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Material Type",
          "InternalName": "material",
          "VariableType": "Choices",
          "Description": "Set to the material type of the brush. Used to decide what sounds to make when damaged, and what gibs to produce when broken.",
          "Options": [
            {
              "Name": "Glass",
              "Description": ""
            },
            {
              "Name": "Wood",
              "Description": ""
            },
            {
              "Name": "Metal",
              "Description": ""
            },
            {
              "Name": "Flesh",
              "Description": ""
            },
            {
              "Name": "CinderBlock",
              "Description": ""
            },
            {
              "Name": "Ceiling Tile",
              "Description": ""
            },
            {
              "Name": "Computer",
              "Description": ""
            },
            {
              "Name": "Unbreakable Glass",
              "Description": ""
            },
            {
              "Name": "Rocks",
              "Description": ""
            },
            {
              "Name": "None",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Gibs Direction",
          "InternalName": "explosion",
          "VariableType": "Choices",
          "Description": "Used to decide which direction to throw gibs when broken.",
          "Options": [
            {
              "Name": "Random",
              "Description": ""
            },
            {
              "Name": "Relative to Attack",
              "Description": ""
            },
            {
              "Name": "Use Precise Gib Dir",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Precise Gib Direction",
          "InternalName": "gibdir",
          "VariableType": "Angle",
          "Description": "Specifies the direction to throw gibs when this breakable breaks. Be sure to select Use Precise Gib Dir in the Gibs Direction field!",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Damaging it Doesn\u0027t Push It",
          "InternalName": "nodamageforces",
          "VariableType": "Bool",
          "Description": "Used to determine whether or not damage should cause the brush to move.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Spawn On Break",
          "InternalName": "spawnobject",
          "VariableType": "Choices",
          "Description": "When broken, an entity of the selected type will be created.",
          "Options": [
            {
              "Name": "item_battery",
              "Description": ""
            },
            {
              "Name": "item_healthkit",
              "Description": ""
            },
            {
              "Name": "item_ammo_pistol",
              "Description": ""
            },
            {
              "Name": "item_ammo_pistol_large",
              "Description": ""
            },
            {
              "Name": "item_ammo_smg1",
              "Description": ""
            },
            {
              "Name": "item_ammo_smg1_large",
              "Description": ""
            },
            {
              "Name": "item_ammo_ar2",
              "Description": ""
            },
            {
              "Name": "item_ammo_ar2_large",
              "Description": ""
            },
            {
              "Name": "item_box_buckshot",
              "Description": ""
            },
            {
              "Name": "item_flare_round",
              "Description": ""
            },
            {
              "Name": "item_box_flare_rounds",
              "Description": ""
            },
            {
              "Name": "item_ml_grenade",
              "Description": ""
            },
            {
              "Name": "item_smg1_grenade",
              "Description": ""
            },
            {
              "Name": "item_box_sniper_rounds",
              "Description": ""
            },
            {
              "Name": "unused1",
              "Description": ""
            },
            {
              "Name": "weapon_stunstick",
              "Description": ""
            },
            {
              "Name": "weapon_ar1",
              "Description": ""
            },
            {
              "Name": "weapon_ar2",
              "Description": ""
            },
            {
              "Name": "unused2",
              "Description": ""
            },
            {
              "Name": "weapon_ml",
              "Description": ""
            },
            {
              "Name": "weapon_smg1",
              "Description": ""
            },
            {
              "Name": "weapon_smg2",
              "Description": ""
            },
            {
              "Name": "weapon_slam",
              "Description": ""
            },
            {
              "Name": "weapon_shotgun",
              "Description": ""
            },
            {
              "Name": "weapon_molotov",
              "Description": ""
            },
            {
              "Name": "item_dynamic_resupply",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Explode Magnitude",
          "InternalName": "explodemagnitude",
          "VariableType": "Integer",
          "Description": "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Pressure Delay",
          "InternalName": "pressuredelay",
          "VariableType": "Float",
          "Description": "Delay, in seconds, after \u0027broken\u0027 by pressure before breaking apart (allows for sound to play before breaking apart).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum Light Level",
          "InternalName": "_minlight",
          "VariableType": "String",
          "Description": "The minimum level of ambient light that hits this brush.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "spawnflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Debris - Don\u0027t collide with the player or other debris",
              "Description": ""
            },
            {
              "Name": "Motion Disabled",
              "Description": ""
            },
            {
              "Name": "Use Preferred Carry Angles",
              "Description": ""
            },
            {
              "Name": "Enable motion on Physcannon grab",
              "Description": ""
            },
            {
              "Name": "Ignore \u002BUSE for Pickup",
              "Description": ""
            },
            {
              "Name": "Generate output on \u002BUSE ",
              "Description": ""
            },
            {
              "Name": "Start Asleep",
              "Description": ""
            },
            {
              "Name": "Physgun is NOT allowed to pick this up.",
              "Description": ""
            },
            {
              "Name": "Physgun is NOT allowed to punt this object.",
              "Description": ""
            },
            {
              "Name": "Prevent motion enable on player bump",
              "Description": ""
            },
            {
              "Name": "Force nav-ignore",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Impact Damage Type",
          "InternalName": "Damagetype",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Blunt",
              "Description": ""
            },
            {
              "Name": "Sharp",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Mass Scale",
          "InternalName": "massScale",
          "VariableType": "Float",
          "Description": "A scale multiplier for the object\u0027s mass.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Health Level to Override Motion",
          "InternalName": "damagetoenablemotion",
          "VariableType": "Integer",
          "Description": "If specified, this object will start motion disabled. Once its health has dropped below this specified amount, it will enable motion.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Physics Impact Force to Override Motion",
          "InternalName": "forcetoenablemotion",
          "VariableType": "Float",
          "Description": "If specified, this object will start motion disabled. Any impact that imparts a force greater than this value on the physbox will enable motion.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Strength",
          "InternalName": "health",
          "VariableType": "Integer",
          "Description": "Number of points of damage to take before breaking.  0 means don\u0027t break.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Preferred Player-carry Angles",
          "InternalName": "preferredcarryangles",
          "VariableType": "Vector",
          "Description": "If the \u0027Use Preferred Carry Angles\u0027 spawnflag is set, this angle is the angle which the object should orient to when the player picks it up, with the physgun or \u002BUSE.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Not solid to world",
          "InternalName": "notsolid",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Solid to World",
              "Description": ""
            },
            {
              "Name": "Passes through World",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Exploitable by Player",
          "InternalName": "ExploitableByPlayer",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Default",
              "Description": ""
            },
            {
              "Name": "Explosive",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Touch Per Entity Refire Delay",
          "InternalName": "touchoutputperentitydelay",
          "VariableType": "Float",
          "Description": "When set to 0 OnStartTouch events are never sent. Otherwise it\u0027s a delay in seconds before another OnStartTouch is sent for the same entity.",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "Alpha",
          "Description": "Set the sprite\u0027s alpha (0 - 255).",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Color",
          "Description": "Set the sprite\u0027s color (R G B).",
          "VariableType": "Color255",
          "Type": "Input"
        },
        {
          "Name": "SetParent",
          "Description": "Changes the entity\u0027s parent in the movement hierarchy.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachment",
          "Description": "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachmentMaintainOffset",
          "Description": "Change this entity to attach to a specific attachment point on it\u0027s parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it\u0027s position relative to the parent at the time it is attached.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearParent",
          "Description": "Removes this entity from the the movement hierarchy, leaving it free to move independently.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableShadow",
          "Description": "Turn shadow off.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableShadow",
          "Description": "Turn shadow on.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetDamageFilter",
          "Description": "Sets the entity to use as damage filter. Pass in an empty string to clear the damage filter.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Break",
          "Description": "Breaks the breakable.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetHealth",
          "Description": "Sets a new value for the breakable\u0027s health. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "AddHealth",
          "Description": "Adds health to the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "RemoveHealth",
          "Description": "Removes health from the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetMass",
          "Description": "Set mass of this object.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "OnBreak",
          "Description": "Fired when this breakable breaks.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnHealthChanged",
          "Description": "Fired when the health of this breakable changes, passing the new value of health as a percentage of max health, from [0..1].",
          "VariableType": "Float",
          "Type": "Output"
        },
        {
          "Name": "EnableDamageForces",
          "Description": "Damaging the entity applies physics forces to it.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableDamageForces",
          "Description": "Damaging the entity does *not* apply physics forces to it.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Wake",
          "Description": "Wake up this physics object, if it is sleeping.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Sleep",
          "Description": "Put this physics object to sleep. It will wake if given the Wake input, or if force is applied to it. Note that physics objects go to sleep automatically after coming to rest for a while, so you don\u0027t really need to use this.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableMotion",
          "Description": "Enable physics motion/collision response.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableMotion",
          "Description": "Disable physics motion/collision response.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "ForceDrop",
          "Description": "If this object is being carried by a player, with the physgun or \u002BUSE, force it to be dropped.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableFloating",
          "Description": "Turn off floating simulation (and cost).",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnDamaged",
          "Description": "Fired when this entity is damaged.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAwakened",
          "Description": "Fired when this entity becomes awake (collision/force is applied).",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnMotionEnabled",
          "Description": "Fired when motion is enabled due to damage/physcannon/force.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysGunPickup",
          "Description": "Fired when a player picks this object up, either with the physgun or \u002BUSE.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysGunPunt",
          "Description": "Fired when a player punts this object with the physgun.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysGunOnlyPickup",
          "Description": "Fired when a player picks this object up WITH THE PHYSGUN. \u002BUSE pickups do not fire this output.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysGunDrop",
          "Description": "Fired when a player drops this object.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPlayerUse",
          "Description": "Fired when the player tries to \u002BUSE the physbox. This output will fire only if the Generate output on \u002BUSE spawnflag is set.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnStartTouch",
          "Description": "Fired when it touches with another entity. Activator is the other entity.",
          "VariableType": "Void",
          "Type": "Output"
        }
      ]
    }
  ]
}