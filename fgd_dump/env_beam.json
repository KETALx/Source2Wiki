{
  "Name": "env_beam",
  "Pages": [
    {
      "Game": "hla",
      "EntityType": "Point",
      "Name": "env_beam",
      "Description": "An entity that creates a visible beam between two points. The points can be attached to entities to make the beam move around.",
      "IconPath": "",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Render FX",
          "InternalName": "renderfx",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Slow Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Strobe",
              "Description": ""
            },
            {
              "Name": "Fast Strobe",
              "Description": ""
            },
            {
              "Name": "Faster Strobe",
              "Description": ""
            },
            {
              "Name": "Slow Flicker",
              "Description": ""
            },
            {
              "Name": "Fast Flicker",
              "Description": ""
            },
            {
              "Name": "Slow Fade Away",
              "Description": ""
            },
            {
              "Name": "Fast Fade Away",
              "Description": ""
            },
            {
              "Name": "Slow Become Solid",
              "Description": ""
            },
            {
              "Name": "Fast Become Solid",
              "Description": ""
            },
            {
              "Name": "Constant Glow",
              "Description": ""
            },
            {
              "Name": "Distort",
              "Description": ""
            },
            {
              "Name": "Hologram (Distort \u002B fade)",
              "Description": ""
            },
            {
              "Name": "Cull By Distance (TEST)",
              "Description": ""
            },
            {
              "Name": "Spotlight FX",
              "Description": ""
            },
            {
              "Name": "Fade Near",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent",
          "InternalName": "parentname",
          "VariableType": "TargetDestination",
          "Description": "The name of this entity\u0027s parent in the movement hierarchy. Entities with parents move with their parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent Model Bone/Attachment Name",
          "InternalName": "parentAttachmentName",
          "VariableType": "ParentAttachment",
          "Description": "The name of the bone or attachment to attach to on the entity\u0027s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment position offset",
          "InternalName": "local.origin",
          "VariableType": "Vector",
          "Description": "Offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment angular offset",
          "InternalName": "local.angles",
          "VariableType": "Angle",
          "Description": "Angular offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment scale",
          "InternalName": "local.scales",
          "VariableType": "Vector",
          "Description": "Scale in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Model Attachment Offset",
          "InternalName": "useLocalOffset",
          "VariableType": "Bool",
          "Description": "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Brightness (1 - 255)",
          "InternalName": "renderamt",
          "VariableType": "Integer",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Beam Color (R G B)",
          "InternalName": "rendercolor",
          "VariableType": "Color255",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Radius",
          "InternalName": "Radius",
          "VariableType": "Integer",
          "Description": "If the \u0027Random Strike\u0027 spawnflag is set, this radius determines the area within which the endpoints will randomly strike.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Life (seconds 0 = infinite)",
          "InternalName": "life",
          "VariableType": "String",
          "Description": "Amount of time before the beam dies. Setting to zero will make the beam stay forever.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Width of beam",
          "InternalName": "BoltWidth",
          "VariableType": "Float",
          "Description": "Pixel width of the beam.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Amount of noise (0-255)",
          "InternalName": "NoiseAmplitude",
          "VariableType": "Float",
          "Description": "The amount of noise in the beam. 0 is a perfectly straight beam.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Sprite Name",
          "InternalName": "texture",
          "VariableType": "Sprite",
          "Description": "The material used to draw the beam.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Texture Scroll Rate (0-100)",
          "InternalName": "TextureScroll",
          "VariableType": "Integer",
          "Description": "Rate at which the beam texture should scroll along the beam.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Frames per 10 seconds",
          "InternalName": "framerate",
          "VariableType": "Integer",
          "Description": "Framerate at which the beam texture should animate, if it has multiple frames.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Starting Frame",
          "InternalName": "framestart",
          "VariableType": "Integer",
          "Description": "The frame to start the beam texture on.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Strike again time (secs)",
          "InternalName": "StrikeTime",
          "VariableType": "String",
          "Description": "Refire time between random strikes of the beam. Only used if the \u0027Random Strike\u0027 spawnflag is set.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Damage / second",
          "InternalName": "damage",
          "VariableType": "String",
          "Description": "How much damage this beam does per second to things it hits when it is continually on, or instantaneously if it strikes. For continuous damage, the value should be greater than 10 or it may not work.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Entity",
          "InternalName": "LightningStart",
          "VariableType": "TargetDestination",
          "Description": "Entity that the beam starts at.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Ending Entity",
          "InternalName": "LightningEnd",
          "VariableType": "TargetDestination",
          "Description": "Entity that the beam ends at.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Decal Name",
          "InternalName": "decalname",
          "VariableType": "String",
          "Description": "Decal to be applied at the end of the beam",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "HDR color scale.",
          "InternalName": "HDRColorScale",
          "VariableType": "Float",
          "Description": "float value to multiply sprite color by when running in HDR mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Endpoint handle",
          "InternalName": "targetpoint",
          "VariableType": "Vecline",
          "Description": "If a LightningEnd entity is not specified, use this point as the destination instead. If the env_beam moves, the destination point will move along with it.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "spawnflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Start On",
              "Description": ""
            },
            {
              "Name": "Toggle",
              "Description": ""
            },
            {
              "Name": "Random Strike",
              "Description": ""
            },
            {
              "Name": "Ring",
              "Description": ""
            },
            {
              "Name": "StartSparks",
              "Description": ""
            },
            {
              "Name": "EndSparks",
              "Description": ""
            },
            {
              "Name": "Decal End",
              "Description": ""
            },
            {
              "Name": "Shade Start",
              "Description": ""
            },
            {
              "Name": "Shade End",
              "Description": ""
            },
            {
              "Name": "Taper Out",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Touch Type (tripwire)",
          "InternalName": "TouchType",
          "VariableType": "Choices",
          "Description": "If you want the beam to fire an output when touched by entities, choose the entity type here.",
          "Options": [
            {
              "Name": "Not a tripwire",
              "Description": ""
            },
            {
              "Name": "Player Only",
              "Description": ""
            },
            {
              "Name": "NPC Only",
              "Description": ""
            },
            {
              "Name": "Player or NPC",
              "Description": ""
            },
            {
              "Name": "Player or NPC or Physprop",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Beam clipping",
          "InternalName": "ClipStyle",
          "VariableType": "Choices",
          "Description": "Select whether you want the beam to clip against geometry or characters",
          "Options": [
            {
              "Name": "Do not clip (default)",
              "Description": ""
            },
            {
              "Name": "Clip to geometry",
              "Description": ""
            },
            {
              "Name": "Clip to everything solid",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Filter Name",
          "InternalName": "filtername",
          "VariableType": "FilterClass",
          "Description": "Filter to use to see if activator triggers me. See filter_activator_name for more explanation.",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "SetParent",
          "Description": "Changes the entity\u0027s parent in the movement hierarchy.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachment",
          "Description": "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachmentMaintainOffset",
          "Description": "Change this entity to attach to a specific attachment point on it\u0027s parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it\u0027s position relative to the parent at the time it is attached.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearParent",
          "Description": "Removes this entity from the the movement hierarchy, leaving it free to move independently.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "TurnOn",
          "Description": "Turns the beam on.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "TurnOff",
          "Description": "Turns the beam off.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Toggle",
          "Description": "Toggles the beam between on and off.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "StrikeOnce",
          "Description": "Causes the beam to strike once. It will stay on for its set Life and then turn off (it will never turn off if Life is set to zero).",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Alpha",
          "Description": "Sets the beam\u0027s alpha (0 - 255).",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Color",
          "Description": "Sets the beam\u0027s render color (R G B).",
          "VariableType": "Color255",
          "Type": "Input"
        },
        {
          "Name": "ColorRedValue",
          "Description": "Sets the red color channel\u0027s value (0 - 255).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "ColorGreenValue",
          "Description": "Sets the green color channel\u0027s value (0 - 255).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "ColorBlueValue",
          "Description": "Sets the blue color channel\u0027s value (0 - 255).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "Amplitude",
          "Description": "Set the amplitude of beam noise (0 - 255).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "ScrollSpeed",
          "Description": "Set the scroll speed in units per second (0 - 100).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "Width",
          "Description": "Set the width of the beam, in pixels.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "OnTouchedByEntity",
          "Description": "Fired when an entity touches the beam. Only fired if the entity passes the \u0027Touch Type\u0027 choice.",
          "VariableType": "Void",
          "Type": "Output"
        }
      ]
    },
    {
      "Game": "dota2",
      "EntityType": "Point",
      "Name": "env_beam",
      "Description": "An entity that creates a visible beam between two points. The points can be attached to entities to make the beam move around.",
      "IconPath": "",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Render FX",
          "InternalName": "renderfx",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Slow Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Strobe",
              "Description": ""
            },
            {
              "Name": "Fast Strobe",
              "Description": ""
            },
            {
              "Name": "Faster Strobe",
              "Description": ""
            },
            {
              "Name": "Slow Flicker",
              "Description": ""
            },
            {
              "Name": "Fast Flicker",
              "Description": ""
            },
            {
              "Name": "Slow Fade Away",
              "Description": ""
            },
            {
              "Name": "Fast Fade Away",
              "Description": ""
            },
            {
              "Name": "Slow Become Solid",
              "Description": ""
            },
            {
              "Name": "Fast Become Solid",
              "Description": ""
            },
            {
              "Name": "Constant Glow",
              "Description": ""
            },
            {
              "Name": "Distort",
              "Description": ""
            },
            {
              "Name": "Hologram (Distort \u002B fade)",
              "Description": ""
            },
            {
              "Name": "Cull By Distance (TEST)",
              "Description": ""
            },
            {
              "Name": "Spotlight FX",
              "Description": ""
            },
            {
              "Name": "Fade Near",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent",
          "InternalName": "parentname",
          "VariableType": "TargetDestination",
          "Description": "The name of this entity\u0027s parent in the movement hierarchy. Entities with parents move with their parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent Bone/Attachment Name",
          "InternalName": "parentAttachmentName",
          "VariableType": "ParentAttachment",
          "Description": "The name of the bone or attachment to attach to on the entity\u0027s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment. NOTE: If this is specified the Hammer transform will be disregarded, even if \u0027Use Local Transform\u0027 is NOT specified (in that case local transform will be identity)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Local Transform",
          "InternalName": "useLocalOffset",
          "VariableType": "Bool",
          "Description": "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Origin",
          "InternalName": "local.origin",
          "VariableType": "Vector",
          "Description": "Offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Angles",
          "InternalName": "local.angles",
          "VariableType": "Angle",
          "Description": "Angular offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Scale",
          "InternalName": "local.scales",
          "VariableType": "Vector",
          "Description": "Scale in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Brightness (1 - 255)",
          "InternalName": "renderamt",
          "VariableType": "Integer",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Beam Color (R G B)",
          "InternalName": "rendercolor",
          "VariableType": "Color255",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Radius",
          "InternalName": "Radius",
          "VariableType": "Integer",
          "Description": "If the \u0027Random Strike\u0027 spawnflag is set, this radius determines the area within which the endpoints will randomly strike.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Life (seconds 0 = infinite)",
          "InternalName": "life",
          "VariableType": "String",
          "Description": "Amount of time before the beam dies. Setting to zero will make the beam stay forever.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Width of beam",
          "InternalName": "BoltWidth",
          "VariableType": "Float",
          "Description": "Pixel width of the beam.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Amount of noise (0-255)",
          "InternalName": "NoiseAmplitude",
          "VariableType": "Float",
          "Description": "The amount of noise in the beam. 0 is a perfectly straight beam.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Sprite Name",
          "InternalName": "texture",
          "VariableType": "Sprite",
          "Description": "The material used to draw the beam.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Texture Scroll Rate (0-100)",
          "InternalName": "TextureScroll",
          "VariableType": "Integer",
          "Description": "Rate at which the beam texture should scroll along the beam.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Frames per 10 seconds",
          "InternalName": "framerate",
          "VariableType": "Integer",
          "Description": "Framerate at which the beam texture should animate, if it has multiple frames.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Starting Frame",
          "InternalName": "framestart",
          "VariableType": "Integer",
          "Description": "The frame to start the beam texture on.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Strike again time (secs)",
          "InternalName": "StrikeTime",
          "VariableType": "String",
          "Description": "Refire time between random strikes of the beam. Only used if the \u0027Random Strike\u0027 spawnflag is set.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Damage / second",
          "InternalName": "damage",
          "VariableType": "String",
          "Description": "How much damage this beam does per second to things it hits when it is continually on, or instantaneously if it strikes. For continuous damage, the value should be greater than 10 or it may not work.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Entity",
          "InternalName": "LightningStart",
          "VariableType": "TargetDestination",
          "Description": "Entity that the beam starts at.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Ending Entity",
          "InternalName": "LightningEnd",
          "VariableType": "TargetDestination",
          "Description": "Entity that the beam ends at.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Decal Name",
          "InternalName": "decalname",
          "VariableType": "String",
          "Description": "Decal to be applied at the end of the beam",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "HDR color scale.",
          "InternalName": "HDRColorScale",
          "VariableType": "Float",
          "Description": "float value to multiply sprite color by when running in HDR mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Endpoint handle",
          "InternalName": "targetpoint",
          "VariableType": "Vecline",
          "Description": "If a LightningEnd entity is not specified, use this point as the destination instead. If the env_beam moves, the destination point will move along with it.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "spawnflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Start On",
              "Description": ""
            },
            {
              "Name": "Toggle",
              "Description": ""
            },
            {
              "Name": "Random Strike",
              "Description": ""
            },
            {
              "Name": "Ring",
              "Description": ""
            },
            {
              "Name": "StartSparks",
              "Description": ""
            },
            {
              "Name": "EndSparks",
              "Description": ""
            },
            {
              "Name": "Decal End",
              "Description": ""
            },
            {
              "Name": "Shade Start",
              "Description": ""
            },
            {
              "Name": "Shade End",
              "Description": ""
            },
            {
              "Name": "Taper Out",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Touch Type (tripwire)",
          "InternalName": "TouchType",
          "VariableType": "Choices",
          "Description": "If you want the beam to fire an output when touched by entities, choose the entity type here.",
          "Options": [
            {
              "Name": "Not a tripwire",
              "Description": ""
            },
            {
              "Name": "Player Only",
              "Description": ""
            },
            {
              "Name": "NPC Only",
              "Description": ""
            },
            {
              "Name": "Player or NPC",
              "Description": ""
            },
            {
              "Name": "Player or NPC or Physprop",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Beam clipping",
          "InternalName": "ClipStyle",
          "VariableType": "Choices",
          "Description": "Select whether you want the beam to clip against geometry or characters",
          "Options": [
            {
              "Name": "Do not clip (default)",
              "Description": ""
            },
            {
              "Name": "Clip to geometry",
              "Description": ""
            },
            {
              "Name": "Clip to everything solid",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Filter Name",
          "InternalName": "filtername",
          "VariableType": "FilterClass",
          "Description": "Filter to use to see if activator triggers me. See filter_activator_name for more explanation.",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "SetParent",
          "Description": "Changes the entity\u0027s parent in the movement hierarchy.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachment",
          "Description": "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachmentMaintainOffset",
          "Description": "Change this entity to attach to a specific attachment point on it\u0027s parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it\u0027s position relative to the parent at the time it is attached.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearParent",
          "Description": "Removes this entity from the the movement hierarchy, leaving it free to move independently.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FollowEntity",
          "Description": "Bone merges this entity to a parent entity. Call again passing nothing to end the bone merge.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillConstrained",
          "Description": "Removes this entity, all its children, and anything constrained to it, from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game. Parameter is the inflictor.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "TurnOn",
          "Description": "Turns the beam on.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "TurnOff",
          "Description": "Turns the beam off.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Toggle",
          "Description": "Toggles the beam between on and off.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "StrikeOnce",
          "Description": "Causes the beam to strike once. It will stay on for its set Life and then turn off (it will never turn off if Life is set to zero).",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Alpha",
          "Description": "Sets the beam\u0027s alpha (0 - 255).",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Color",
          "Description": "Sets the beam\u0027s render color (R G B).",
          "VariableType": "Color255",
          "Type": "Input"
        },
        {
          "Name": "ColorRedValue",
          "Description": "Sets the red color channel\u0027s value (0 - 255).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "ColorGreenValue",
          "Description": "Sets the green color channel\u0027s value (0 - 255).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "ColorBlueValue",
          "Description": "Sets the blue color channel\u0027s value (0 - 255).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "Amplitude",
          "Description": "Set the amplitude of beam noise (0 - 255).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "ScrollSpeed",
          "Description": "Set the scroll speed in units per second (0 - 100).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "Width",
          "Description": "Set the width of the beam, in pixels.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "OnTouchedByEntity",
          "Description": "Fired when an entity touches the beam. Only fired if the entity passes the \u0027Touch Type\u0027 choice.",
          "VariableType": "Void",
          "Type": "Output"
        }
      ]
    },
    {
      "Game": "steamvr",
      "EntityType": "Point",
      "Name": "env_beam",
      "Description": "An entity that creates a visible beam between two points. The points can be attached to entities to make the beam move around.",
      "IconPath": "",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Render FX",
          "InternalName": "renderfx",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Slow Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Strobe",
              "Description": ""
            },
            {
              "Name": "Fast Strobe",
              "Description": ""
            },
            {
              "Name": "Faster Strobe",
              "Description": ""
            },
            {
              "Name": "Slow Flicker",
              "Description": ""
            },
            {
              "Name": "Fast Flicker",
              "Description": ""
            },
            {
              "Name": "Slow Fade Away",
              "Description": ""
            },
            {
              "Name": "Fast Fade Away",
              "Description": ""
            },
            {
              "Name": "Slow Become Solid",
              "Description": ""
            },
            {
              "Name": "Fast Become Solid",
              "Description": ""
            },
            {
              "Name": "Constant Glow",
              "Description": ""
            },
            {
              "Name": "Distort",
              "Description": ""
            },
            {
              "Name": "Hologram (Distort \u002B fade)",
              "Description": ""
            },
            {
              "Name": "Cull By Distance (TEST)",
              "Description": ""
            },
            {
              "Name": "Spotlight FX",
              "Description": ""
            },
            {
              "Name": "Fade Near",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent",
          "InternalName": "parentname",
          "VariableType": "TargetDestination",
          "Description": "The name of this entity\u0027s parent in the movement hierarchy. Entities with parents move with their parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent Model Bone/Attachment Name",
          "InternalName": "parentAttachmentName",
          "VariableType": "ParentAttachment",
          "Description": "The name of the bone or attachment to attach to on the entity\u0027s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment position offset",
          "InternalName": "local.origin",
          "VariableType": "Vector",
          "Description": "Offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment angular offset",
          "InternalName": "local.angles",
          "VariableType": "Angle",
          "Description": "Angular offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment scale",
          "InternalName": "local.scales",
          "VariableType": "Vector",
          "Description": "Scale in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Model Attachment Offset",
          "InternalName": "useLocalOffset",
          "VariableType": "Bool",
          "Description": "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Brightness (1 - 255)",
          "InternalName": "renderamt",
          "VariableType": "Integer",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Beam Color (R G B)",
          "InternalName": "rendercolor",
          "VariableType": "Color255",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Radius",
          "InternalName": "Radius",
          "VariableType": "Integer",
          "Description": "If the \u0027Random Strike\u0027 spawnflag is set, this radius determines the area within which the endpoints will randomly strike.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Life (seconds 0 = infinite)",
          "InternalName": "life",
          "VariableType": "String",
          "Description": "Amount of time before the beam dies. Setting to zero will make the beam stay forever.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Width of beam",
          "InternalName": "BoltWidth",
          "VariableType": "Float",
          "Description": "Pixel width of the beam.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Amount of noise (0-255)",
          "InternalName": "NoiseAmplitude",
          "VariableType": "Float",
          "Description": "The amount of noise in the beam. 0 is a perfectly straight beam.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Sprite Name",
          "InternalName": "texture",
          "VariableType": "Sprite",
          "Description": "The material used to draw the beam.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Texture Scroll Rate (0-100)",
          "InternalName": "TextureScroll",
          "VariableType": "Integer",
          "Description": "Rate at which the beam texture should scroll along the beam.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Frames per 10 seconds",
          "InternalName": "framerate",
          "VariableType": "Integer",
          "Description": "Framerate at which the beam texture should animate, if it has multiple frames.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Starting Frame",
          "InternalName": "framestart",
          "VariableType": "Integer",
          "Description": "The frame to start the beam texture on.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Strike again time (secs)",
          "InternalName": "StrikeTime",
          "VariableType": "String",
          "Description": "Refire time between random strikes of the beam. Only used if the \u0027Random Strike\u0027 spawnflag is set.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Damage / second",
          "InternalName": "damage",
          "VariableType": "String",
          "Description": "How much damage this beam does per second to things it hits when it is continually on, or instantaneously if it strikes. For continuous damage, the value should be greater than 10 or it may not work.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Entity",
          "InternalName": "LightningStart",
          "VariableType": "TargetDestination",
          "Description": "Entity that the beam starts at.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Ending Entity",
          "InternalName": "LightningEnd",
          "VariableType": "TargetDestination",
          "Description": "Entity that the beam ends at.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Decal Name",
          "InternalName": "decalname",
          "VariableType": "String",
          "Description": "Decal to be applied at the end of the beam",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "HDR color scale.",
          "InternalName": "HDRColorScale",
          "VariableType": "Float",
          "Description": "float value to multiply sprite color by when running in HDR mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Endpoint handle",
          "InternalName": "targetpoint",
          "VariableType": "Vecline",
          "Description": "If a LightningEnd entity is not specified, use this point as the destination instead. If the env_beam moves, the destination point will move along with it.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "spawnflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Start On",
              "Description": ""
            },
            {
              "Name": "Toggle",
              "Description": ""
            },
            {
              "Name": "Random Strike",
              "Description": ""
            },
            {
              "Name": "Ring",
              "Description": ""
            },
            {
              "Name": "StartSparks",
              "Description": ""
            },
            {
              "Name": "EndSparks",
              "Description": ""
            },
            {
              "Name": "Decal End",
              "Description": ""
            },
            {
              "Name": "Shade Start",
              "Description": ""
            },
            {
              "Name": "Shade End",
              "Description": ""
            },
            {
              "Name": "Taper Out",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Touch Type (tripwire)",
          "InternalName": "TouchType",
          "VariableType": "Choices",
          "Description": "If you want the beam to fire an output when touched by entities, choose the entity type here.",
          "Options": [
            {
              "Name": "Not a tripwire",
              "Description": ""
            },
            {
              "Name": "Player Only",
              "Description": ""
            },
            {
              "Name": "NPC Only",
              "Description": ""
            },
            {
              "Name": "Player or NPC",
              "Description": ""
            },
            {
              "Name": "Player or NPC or Physprop",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Beam clipping",
          "InternalName": "ClipStyle",
          "VariableType": "Choices",
          "Description": "Select whether you want the beam to clip against geometry or characters",
          "Options": [
            {
              "Name": "Do not clip (default)",
              "Description": ""
            },
            {
              "Name": "Clip to geometry",
              "Description": ""
            },
            {
              "Name": "Clip to everything solid",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Filter Name",
          "InternalName": "filtername",
          "VariableType": "FilterClass",
          "Description": "Filter to use to see if activator triggers me. See filter_activator_name for more explanation.",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "SetParent",
          "Description": "Changes the entity\u0027s parent in the movement hierarchy.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachment",
          "Description": "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachmentMaintainOffset",
          "Description": "Change this entity to attach to a specific attachment point on it\u0027s parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it\u0027s position relative to the parent at the time it is attached.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearParent",
          "Description": "Removes this entity from the the movement hierarchy, leaving it free to move independently.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "TurnOn",
          "Description": "Turns the beam on.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "TurnOff",
          "Description": "Turns the beam off.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Toggle",
          "Description": "Toggles the beam between on and off.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "StrikeOnce",
          "Description": "Causes the beam to strike once. It will stay on for its set Life and then turn off (it will never turn off if Life is set to zero).",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Alpha",
          "Description": "Sets the beam\u0027s alpha (0 - 255).",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Color",
          "Description": "Sets the beam\u0027s render color (R G B).",
          "VariableType": "Color255",
          "Type": "Input"
        },
        {
          "Name": "ColorRedValue",
          "Description": "Sets the red color channel\u0027s value (0 - 255).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "ColorGreenValue",
          "Description": "Sets the green color channel\u0027s value (0 - 255).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "ColorBlueValue",
          "Description": "Sets the blue color channel\u0027s value (0 - 255).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "Amplitude",
          "Description": "Set the amplitude of beam noise (0 - 255).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "ScrollSpeed",
          "Description": "Set the scroll speed in units per second (0 - 100).",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "Width",
          "Description": "Set the width of the beam, in pixels.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "OnTouchedByEntity",
          "Description": "Fired when an entity touches the beam. Only fired if the entity passes the \u0027Touch Type\u0027 choice.",
          "VariableType": "Void",
          "Type": "Output"
        }
      ]
    }
  ]
}