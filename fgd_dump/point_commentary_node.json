{
  "Name": "point_commentary_node",
  "Pages": [
    {
      "Game": "cs2",
      "EntityType": "Point",
      "Name": "point_commentary_node",
      "Description": "Defines the position and data of a commentary node.",
      "IconPath": "",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Parent",
          "InternalName": "parentname",
          "VariableType": "TargetDestination",
          "Description": "The name of this entity\u0027s parent in the movement hierarchy. Entities with parents move with their parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent Bone/Attachment Name",
          "InternalName": "parentAttachmentName",
          "VariableType": "ParentAttachment",
          "Description": "The name of the bone or attachment to attach to on the entity\u0027s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment. NOTE: If this is specified the Hammer transform will be disregarded, even if \u0027Use Local Transform\u0027 is NOT specified (in that case local transform will be identity)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Local Transform",
          "InternalName": "useLocalOffset",
          "VariableType": "Bool",
          "Description": "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Origin",
          "InternalName": "local.origin",
          "VariableType": "Vector",
          "Description": "Offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Angles",
          "InternalName": "local.angles",
          "VariableType": "Angle",
          "Description": "Angular offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Scale",
          "InternalName": "local.scales",
          "VariableType": "Vector",
          "Description": "Scale in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model",
          "InternalName": "model",
          "VariableType": "Studio",
          "Description": "Model to use.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Commentary Audio",
          "InternalName": "commentaryfile",
          "VariableType": "Sound",
          "Description": "Name of the sound event that contains the commentary audio for this node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Title",
          "InternalName": "title",
          "VariableType": "String",
          "Description": "Title of this commentary node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Speaker(s) Names",
          "InternalName": "speakers",
          "VariableType": "String",
          "Description": "Name(s) of the speaker(s) in the commentary audio for this node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Node ID",
          "InternalName": "node_id",
          "VariableType": "Integer",
          "Description": "The unique number of this node in the current level. If left at 0, the first unused Node ID will be calculated at runtime.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Pre Commands",
          "InternalName": "precommands",
          "VariableType": "String",
          "Description": "A set of console commands, separated by semi-colon, that should be issued when this node starts playing.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Post Commands",
          "InternalName": "postcommands",
          "VariableType": "String",
          "Description": "A set of console commands, separated by semi-colon, that should be issued when this node stops playing (due to completion or interruption).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "View Target Entity",
          "InternalName": "viewtarget",
          "VariableType": "TargetDestination",
          "Description": "Optional name of an entity that the player\u0027s view will be forced to look at when listening to this node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "View Origin Entity",
          "InternalName": "viewposition",
          "VariableType": "TargetDestination",
          "Description": "Optional name of an entity that the player\u0027s view should move to when listening to this node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Teleport Target",
          "InternalName": "teleport_origin",
          "VariableType": "WorldPoint",
          "Description": "Teleport position associated with this node. If players use Mouse2 to jump to the next node, they\u0027ll be moved to that node\u0027s corresponding teleport position.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Prevent Movement?",
          "InternalName": "prevent_movement",
          "VariableType": "Choices",
          "Description": "If set, the player will be unable to move while this node is playing.",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Disabled?",
          "InternalName": "start_disabled",
          "VariableType": "Choices",
          "Description": "If set, this node will be disabled on startup, and will require the Enable input to be fired before it will be visible to the player.",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "SetParent",
          "Description": "Changes the entity\u0027s parent in the movement hierarchy.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachment",
          "Description": "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachmentMaintainOffset",
          "Description": "Change this entity to attach to a specific attachment point on it\u0027s parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it\u0027s position relative to the parent at the time it is attached.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearParent",
          "Description": "Removes this entity from the the movement hierarchy, leaving it free to move independently.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FollowEntity",
          "Description": "Bone merges this entity to a parent entity. Call again passing nothing to end the bone merge.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillConstrained",
          "Description": "Removes this entity, all its children, and anything constrained to it, from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game. Parameter is the inflictor.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "StartCommentary",
          "Description": "Forces a node to start playing.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "StartUnstoppableCommentary",
          "Description": "Forces a node to start playing, and prevents the player from stopping the playback until it has completed.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Enable",
          "Description": "Enable this node, making it visible to the player.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Disable",
          "Description": "Disable this node, making it invisible to the player.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetNewOrigin",
          "Description": "Set a new origin for this commentary node. If it\u0027s not in use, it\u0027ll teleport to this location immediately. If it\u0027s currently being listened to, it\u0027ll return to this location when it finishes playing.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "OnCommentaryStarted",
          "Description": "Fired when this node starts playback.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnCommentaryStopped",
          "Description": "Fired when this node stops playback.",
          "VariableType": "Void",
          "Type": "Output"
        }
      ]
    },
    {
      "Game": "hla",
      "EntityType": "Point",
      "Name": "point_commentary_node",
      "Description": "Defines the position and data of a commentary node.",
      "IconPath": "",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Parent",
          "InternalName": "parentname",
          "VariableType": "TargetDestination",
          "Description": "The name of this entity\u0027s parent in the movement hierarchy. Entities with parents move with their parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent Model Bone/Attachment Name",
          "InternalName": "parentAttachmentName",
          "VariableType": "ParentAttachment",
          "Description": "The name of the bone or attachment to attach to on the entity\u0027s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment position offset",
          "InternalName": "local.origin",
          "VariableType": "Vector",
          "Description": "Offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment angular offset",
          "InternalName": "local.angles",
          "VariableType": "Angle",
          "Description": "Angular offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment scale",
          "InternalName": "local.scales",
          "VariableType": "Vector",
          "Description": "Scale in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Model Attachment Offset",
          "InternalName": "useLocalOffset",
          "VariableType": "Bool",
          "Description": "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model",
          "InternalName": "model",
          "VariableType": "Studio",
          "Description": "Model to use.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Commentary Audio",
          "InternalName": "commentaryfile",
          "VariableType": "Sound",
          "Description": "Name of the sound event that contains the commentary audio for this node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Title",
          "InternalName": "title",
          "VariableType": "String",
          "Description": "Title of this commentary node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Speaker(s) Names",
          "InternalName": "speakers",
          "VariableType": "String",
          "Description": "Name(s) of the speaker(s) in the commentary audio for this node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Node ID",
          "InternalName": "node_id",
          "VariableType": "Integer",
          "Description": "The unique number of this node in the current level. If left at 0, the first unused Node ID will be calculated at runtime.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Pre Commands",
          "InternalName": "precommands",
          "VariableType": "String",
          "Description": "A set of console commands, separated by semi-colon, that should be issued when this node starts playing.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Post Commands",
          "InternalName": "postcommands",
          "VariableType": "String",
          "Description": "A set of console commands, separated by semi-colon, that should be issued when this node stops playing (due to completion or interruption).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "View Target Entity",
          "InternalName": "viewtarget",
          "VariableType": "TargetDestination",
          "Description": "Optional name of an entity that the player\u0027s view will be forced to look at when listening to this node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "View Origin Entity",
          "InternalName": "viewposition",
          "VariableType": "TargetDestination",
          "Description": "Optional name of an entity that the player\u0027s view should move to when listening to this node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Teleport Target",
          "InternalName": "teleport_origin",
          "VariableType": "WorldPoint",
          "Description": "Teleport position associated with this node. If players use Mouse2 to jump to the next node, they\u0027ll be moved to that node\u0027s corresponding teleport position.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Prevent Movement?",
          "InternalName": "prevent_movement",
          "VariableType": "Choices",
          "Description": "If set, the player will be unable to move while this node is playing.",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Disabled?",
          "InternalName": "start_disabled",
          "VariableType": "Choices",
          "Description": "If set, this node will be disabled on startup, and will require the Enable input to be fired before it will be visible to the player.",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "SetParent",
          "Description": "Changes the entity\u0027s parent in the movement hierarchy.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachment",
          "Description": "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachmentMaintainOffset",
          "Description": "Change this entity to attach to a specific attachment point on it\u0027s parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it\u0027s position relative to the parent at the time it is attached.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearParent",
          "Description": "Removes this entity from the the movement hierarchy, leaving it free to move independently.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "StartCommentary",
          "Description": "Forces a node to start playing.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "StartUnstoppableCommentary",
          "Description": "Forces a node to start playing, and prevents the player from stopping the playback until it has completed.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Enable",
          "Description": "Enable this node, making it visible to the player.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Disable",
          "Description": "Disable this node, making it invisible to the player.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetNewOrigin",
          "Description": "Set a new origin for this commentary node. If it\u0027s not in use, it\u0027ll teleport to this location immediately. If it\u0027s currently being listened to, it\u0027ll return to this location when it finishes playing.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "OnCommentaryStarted",
          "Description": "Fired when this node starts playback.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnCommentaryStopped",
          "Description": "Fired when this node stops playback.",
          "VariableType": "Void",
          "Type": "Output"
        }
      ]
    },
    {
      "Game": "dota2",
      "EntityType": "Point",
      "Name": "point_commentary_node",
      "Description": "Defines the position and data of a commentary node.",
      "IconPath": "",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Parent",
          "InternalName": "parentname",
          "VariableType": "TargetDestination",
          "Description": "The name of this entity\u0027s parent in the movement hierarchy. Entities with parents move with their parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent Bone/Attachment Name",
          "InternalName": "parentAttachmentName",
          "VariableType": "ParentAttachment",
          "Description": "The name of the bone or attachment to attach to on the entity\u0027s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment. NOTE: If this is specified the Hammer transform will be disregarded, even if \u0027Use Local Transform\u0027 is NOT specified (in that case local transform will be identity)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Local Transform",
          "InternalName": "useLocalOffset",
          "VariableType": "Bool",
          "Description": "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Origin",
          "InternalName": "local.origin",
          "VariableType": "Vector",
          "Description": "Offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Angles",
          "InternalName": "local.angles",
          "VariableType": "Angle",
          "Description": "Angular offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Scale",
          "InternalName": "local.scales",
          "VariableType": "Vector",
          "Description": "Scale in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model",
          "InternalName": "model",
          "VariableType": "Studio",
          "Description": "Model to use.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Commentary Audio",
          "InternalName": "commentaryfile",
          "VariableType": "Sound",
          "Description": "Name of the sound event that contains the commentary audio for this node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Title",
          "InternalName": "title",
          "VariableType": "String",
          "Description": "Title of this commentary node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Speaker(s) Names",
          "InternalName": "speakers",
          "VariableType": "String",
          "Description": "Name(s) of the speaker(s) in the commentary audio for this node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Node ID",
          "InternalName": "node_id",
          "VariableType": "Integer",
          "Description": "The unique number of this node in the current level. If left at 0, the first unused Node ID will be calculated at runtime.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Pre Commands",
          "InternalName": "precommands",
          "VariableType": "String",
          "Description": "A set of console commands, separated by semi-colon, that should be issued when this node starts playing.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Post Commands",
          "InternalName": "postcommands",
          "VariableType": "String",
          "Description": "A set of console commands, separated by semi-colon, that should be issued when this node stops playing (due to completion or interruption).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "View Target Entity",
          "InternalName": "viewtarget",
          "VariableType": "TargetDestination",
          "Description": "Optional name of an entity that the player\u0027s view will be forced to look at when listening to this node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "View Origin Entity",
          "InternalName": "viewposition",
          "VariableType": "TargetDestination",
          "Description": "Optional name of an entity that the player\u0027s view should move to when listening to this node.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Teleport Target",
          "InternalName": "teleport_origin",
          "VariableType": "WorldPoint",
          "Description": "Teleport position associated with this node. If players use Mouse2 to jump to the next node, they\u0027ll be moved to that node\u0027s corresponding teleport position.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Prevent Movement?",
          "InternalName": "prevent_movement",
          "VariableType": "Choices",
          "Description": "If set, the player will be unable to move while this node is playing.",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Disabled?",
          "InternalName": "start_disabled",
          "VariableType": "Choices",
          "Description": "If set, this node will be disabled on startup, and will require the Enable input to be fired before it will be visible to the player.",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "SetParent",
          "Description": "Changes the entity\u0027s parent in the movement hierarchy.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachment",
          "Description": "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachmentMaintainOffset",
          "Description": "Change this entity to attach to a specific attachment point on it\u0027s parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it\u0027s position relative to the parent at the time it is attached.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearParent",
          "Description": "Removes this entity from the the movement hierarchy, leaving it free to move independently.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FollowEntity",
          "Description": "Bone merges this entity to a parent entity. Call again passing nothing to end the bone merge.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillConstrained",
          "Description": "Removes this entity, all its children, and anything constrained to it, from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game. Parameter is the inflictor.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "StartCommentary",
          "Description": "Forces a node to start playing.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "StartUnstoppableCommentary",
          "Description": "Forces a node to start playing, and prevents the player from stopping the playback until it has completed.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Enable",
          "Description": "Enable this node, making it visible to the player.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Disable",
          "Description": "Disable this node, making it invisible to the player.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetNewOrigin",
          "Description": "Set a new origin for this commentary node. If it\u0027s not in use, it\u0027ll teleport to this location immediately. If it\u0027s currently being listened to, it\u0027ll return to this location when it finishes playing.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "OnCommentaryStarted",
          "Description": "Fired when this node starts playback.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnCommentaryStopped",
          "Description": "Fired when this node stops playback.",
          "VariableType": "Void",
          "Type": "Output"
        }
      ]
    }
  ]
}