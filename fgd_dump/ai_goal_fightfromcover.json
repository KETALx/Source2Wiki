{
  "Name": "ai_goal_fightfromcover",
  "Pages": [
    {
      "Game": "hla",
      "EntityType": "Point",
      "Name": "ai_goal_fightfromcover",
      "Description": "AI Fight from Cover",
      "IconPath": "fgd_dump/img/hla/ai_goal_fightfromcover.png",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Actor(s) to affect",
          "InternalName": "actor",
          "VariableType": "TargetDestination",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Target Entity",
          "InternalName": "goal",
          "VariableType": "TargetDestination",
          "Description": "The name of the entity to follow. If blank, and the actor likes the player, then defaults to player",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Directional Marker",
          "InternalName": "DirectionalMarker",
          "VariableType": "TargetDestination",
          "Description": "Specify the entity that indicates the direction of battle",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Generic Hint Type",
          "InternalName": "GenericHintType",
          "VariableType": "String",
          "Description": "Behavior looks for \u0027generic\u0027 hints, and requires a text tag to search for",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Zone Width",
          "InternalName": "width",
          "VariableType": "Float",
          "Description": "Width of the hint search area",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Zone Length",
          "InternalName": "length",
          "VariableType": "Float",
          "Description": "Length of the hint search area",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Zone Height",
          "InternalName": "height",
          "VariableType": "Float",
          "Description": "Offset in the direction of the hint search area",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Zone Bias",
          "InternalName": "bias",
          "VariableType": "Float",
          "Description": "Offset in the direction of the hint search area",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Active",
          "InternalName": "StartActive",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "Activate",
          "Description": "",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Deactivate",
          "Description": "",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetDirectionalMarker",
          "Description": "Specify the entity that indicates the direction of battle",
          "VariableType": "String",
          "Type": "Input"
        }
      ]
    },
    {
      "Game": "steamvr",
      "EntityType": "Point",
      "Name": "ai_goal_fightfromcover",
      "Description": "AI Fight from Cover",
      "IconPath": "fgd_dump/img/steamvr/ai_goal_fightfromcover.png",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Actor(s) to affect",
          "InternalName": "actor",
          "VariableType": "TargetDestination",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Target Entity",
          "InternalName": "goal",
          "VariableType": "TargetDestination",
          "Description": "The name of the entity to follow. If blank, and the actor likes the player, then defaults to player",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Directional Marker",
          "InternalName": "DirectionalMarker",
          "VariableType": "TargetDestination",
          "Description": "Specify the entity that indicates the direction of battle",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Generic Hint Type",
          "InternalName": "GenericHintType",
          "VariableType": "String",
          "Description": "Behavior looks for \u0027generic\u0027 hints, and requires a text tag to search for",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Zone Width",
          "InternalName": "width",
          "VariableType": "Float",
          "Description": "Width of the hint search area",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Zone Length",
          "InternalName": "length",
          "VariableType": "Float",
          "Description": "Length of the hint search area",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Zone Height",
          "InternalName": "height",
          "VariableType": "Float",
          "Description": "Offset in the direction of the hint search area",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Zone Bias",
          "InternalName": "bias",
          "VariableType": "Float",
          "Description": "Offset in the direction of the hint search area",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Active",
          "InternalName": "StartActive",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "Activate",
          "Description": "",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Deactivate",
          "Description": "",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetDirectionalMarker",
          "Description": "Specify the entity that indicates the direction of battle",
          "VariableType": "String",
          "Type": "Input"
        }
      ]
    }
  ]
}