{
  "Name": "math_counter",
  "Pages": [
    {
      "Game": "cs2",
      "EntityType": "Point",
      "Name": "math_counter",
      "Description": "Holds a numeric value and performs arithmetic operations upon it. If either the minimum or maximum legal value is nonzero, OutValue will be clamped to the legal range, and the OnHitMin/OnHitMax outputs will be fired at the appropriate times. If both min and max are set to zero, no clamping is performed and only the OutValue output will be fired.",
      "IconPath": "fgd_dump/img/cs2/math_counter.png",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Start Disabled",
          "InternalName": "StartDisabled",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Initial Value",
          "InternalName": "startvalue",
          "VariableType": "Integer",
          "Description": "Starting value for the counter.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum Legal Value",
          "InternalName": "min",
          "VariableType": "Integer",
          "Description": "Minimum legal value for the counter. If min=0 and max=0, no clamping is performed.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Maximum Legal Value",
          "InternalName": "max",
          "VariableType": "Integer",
          "Description": "Maximum legal value for the counter. If min=0 and max=0, no clamping is performed.",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "Enable",
          "Description": "Enable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Disable",
          "Description": "Disable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillConstrained",
          "Description": "Removes this entity, all its children, and anything constrained to it, from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game. Parameter is the inflictor.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Add",
          "Description": "Add an amount to the counter and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Divide",
          "Description": "Divide the counter by an amount and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Multiply",
          "Description": "Multiply the counter by an amount and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetValue",
          "Description": "Set the counter to a new value and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetValueNoFire",
          "Description": "Set the counter to a new value without firing any outputs.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Subtract",
          "Description": "Subtract an amount from the counter and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetHitMax",
          "Description": "Set the upper bound of the counter and fire the OutValue output with the current value.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetHitMin",
          "Description": "Set the lower bound of the counter and fire the OutValue output with the current value.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "GetValue",
          "Description": "Causes the counter fire its OnGetValue output with the current value of the counter. Used for polling the counter when you don\u0027t want constant updates from the OutValue output.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OutValue",
          "Description": "Fired when the counter value changes.",
          "VariableType": "Integer",
          "Type": "Output"
        },
        {
          "Name": "OnHitMin",
          "Description": "Fired when the counter value meets or goes below the min value. The counter must go back above the min value before the output will fire again.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnHitMax",
          "Description": "Fired when the counter value meets or exceeds the max value. The counter must go below the max value before the output will fire again.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnChangedFromMin",
          "Description": "Fired when the counter value changes from the minimum value.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnChangedFromMax",
          "Description": "Fired when the counter value changes from the max value.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnGetValue",
          "Description": "Fired in response to the GetValue input. Used for polling the counter when you don\u0027t want constant updates from the OutValue output.",
          "VariableType": "Integer",
          "Type": "Output"
        }
      ]
    },
    {
      "Game": "hla",
      "EntityType": "Point",
      "Name": "math_counter",
      "Description": "Holds a numeric value and performs arithmetic operations upon it. If either the minimum or maximum legal value is nonzero, OutValue will be clamped to the legal range, and the OnHitMin/OnHitMax outputs will be fired at the appropriate times. If both min and max are set to zero, no clamping is performed and only the OutValue output will be fired.",
      "IconPath": "fgd_dump/img/hla/math_counter.png",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Start Disabled",
          "InternalName": "StartDisabled",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Initial Value",
          "InternalName": "startvalue",
          "VariableType": "Integer",
          "Description": "Starting value for the counter.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum Legal Value",
          "InternalName": "min",
          "VariableType": "Integer",
          "Description": "Minimum legal value for the counter. If min=0 and max=0, no clamping is performed.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Maximum Legal Value",
          "InternalName": "max",
          "VariableType": "Integer",
          "Description": "Maximum legal value for the counter. If min=0 and max=0, no clamping is performed.",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "Enable",
          "Description": "Enable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Disable",
          "Description": "Disable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Add",
          "Description": "Add an amount to the counter and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Divide",
          "Description": "Divide the counter by an amount and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Multiply",
          "Description": "Multiply the counter by an amount and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetValue",
          "Description": "Set the counter to a new value and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetValueNoFire",
          "Description": "Set the counter to a new value without firing any outputs.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Subtract",
          "Description": "Subtract an amount from the counter and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetHitMax",
          "Description": "Set the upper bound of the counter and fire the OutValue output with the current value.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetHitMin",
          "Description": "Set the lower bound of the counter and fire the OutValue output with the current value.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "GetValue",
          "Description": "Causes the counter fire its OnGetValue output with the current value of the counter. Used for polling the counter when you don\u0027t want constant updates from the OutValue output.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OutValue",
          "Description": "Fired when the counter value changes.",
          "VariableType": "Integer",
          "Type": "Output"
        },
        {
          "Name": "OnHitMin",
          "Description": "Fired when the counter value meets or goes below the min value. The counter must go back above the min value before the output will fire again.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnHitMax",
          "Description": "Fired when the counter value meets or exceeds the max value. The counter must go below the max value before the output will fire again.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnChangedFromMin",
          "Description": "Fired when the counter value changes from the minimum value.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnChangedFromMax",
          "Description": "Fired when the counter value changes from the max value.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnGetValue",
          "Description": "Fired in response to the GetValue input. Used for polling the counter when you don\u0027t want constant updates from the OutValue output.",
          "VariableType": "Integer",
          "Type": "Output"
        }
      ]
    },
    {
      "Game": "dota2",
      "EntityType": "Point",
      "Name": "math_counter",
      "Description": "Holds a numeric value and performs arithmetic operations upon it. If either the minimum or maximum legal value is nonzero, OutValue will be clamped to the legal range, and the OnHitMin/OnHitMax outputs will be fired at the appropriate times. If both min and max are set to zero, no clamping is performed and only the OutValue output will be fired.",
      "IconPath": "fgd_dump/img/dota2/math_counter.png",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Start Disabled",
          "InternalName": "StartDisabled",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Initial Value",
          "InternalName": "startvalue",
          "VariableType": "Integer",
          "Description": "Starting value for the counter.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum Legal Value",
          "InternalName": "min",
          "VariableType": "Integer",
          "Description": "Minimum legal value for the counter. If min=0 and max=0, no clamping is performed.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Maximum Legal Value",
          "InternalName": "max",
          "VariableType": "Integer",
          "Description": "Maximum legal value for the counter. If min=0 and max=0, no clamping is performed.",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "Enable",
          "Description": "Enable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Disable",
          "Description": "Disable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillConstrained",
          "Description": "Removes this entity, all its children, and anything constrained to it, from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game. Parameter is the inflictor.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Add",
          "Description": "Add an amount to the counter and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Divide",
          "Description": "Divide the counter by an amount and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Multiply",
          "Description": "Multiply the counter by an amount and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetValue",
          "Description": "Set the counter to a new value and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetValueNoFire",
          "Description": "Set the counter to a new value without firing any outputs.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Subtract",
          "Description": "Subtract an amount from the counter and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetHitMax",
          "Description": "Set the upper bound of the counter and fire the OutValue output with the current value.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetHitMin",
          "Description": "Set the lower bound of the counter and fire the OutValue output with the current value.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "GetValue",
          "Description": "Causes the counter fire its OnGetValue output with the current value of the counter. Used for polling the counter when you don\u0027t want constant updates from the OutValue output.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OutValue",
          "Description": "Fired when the counter value changes.",
          "VariableType": "Integer",
          "Type": "Output"
        },
        {
          "Name": "OnHitMin",
          "Description": "Fired when the counter value meets or goes below the min value. The counter must go back above the min value before the output will fire again.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnHitMax",
          "Description": "Fired when the counter value meets or exceeds the max value. The counter must go below the max value before the output will fire again.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnChangedFromMin",
          "Description": "Fired when the counter value changes from the minimum value.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnChangedFromMax",
          "Description": "Fired when the counter value changes from the max value.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnGetValue",
          "Description": "Fired in response to the GetValue input. Used for polling the counter when you don\u0027t want constant updates from the OutValue output.",
          "VariableType": "Integer",
          "Type": "Output"
        }
      ]
    },
    {
      "Game": "steamvr",
      "EntityType": "Point",
      "Name": "math_counter",
      "Description": "Holds a numeric value and performs arithmetic operations upon it. If either the minimum or maximum legal value is nonzero, OutValue will be clamped to the legal range, and the OnHitMin/OnHitMax outputs will be fired at the appropriate times. If both min and max are set to zero, no clamping is performed and only the OutValue output will be fired.",
      "IconPath": "fgd_dump/img/steamvr/math_counter.png",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Start Disabled",
          "InternalName": "StartDisabled",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Initial Value",
          "InternalName": "startvalue",
          "VariableType": "Integer",
          "Description": "Starting value for the counter.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum Legal Value",
          "InternalName": "min",
          "VariableType": "Integer",
          "Description": "Minimum legal value for the counter. If min=0 and max=0, no clamping is performed.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Maximum Legal Value",
          "InternalName": "max",
          "VariableType": "Integer",
          "Description": "Maximum legal value for the counter. If min=0 and max=0, no clamping is performed.",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "Enable",
          "Description": "Enable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Disable",
          "Description": "Disable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Add",
          "Description": "Add an amount to the counter and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Divide",
          "Description": "Divide the counter by an amount and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Multiply",
          "Description": "Multiply the counter by an amount and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetValue",
          "Description": "Set the counter to a new value and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetValueNoFire",
          "Description": "Set the counter to a new value without firing any outputs.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Subtract",
          "Description": "Subtract an amount from the counter and fire the OutValue output with the result.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetHitMax",
          "Description": "Set the upper bound of the counter and fire the OutValue output with the current value.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetHitMin",
          "Description": "Set the lower bound of the counter and fire the OutValue output with the current value.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "GetValue",
          "Description": "Causes the counter fire its OnGetValue output with the current value of the counter. Used for polling the counter when you don\u0027t want constant updates from the OutValue output.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OutValue",
          "Description": "Fired when the counter value changes.",
          "VariableType": "Integer",
          "Type": "Output"
        },
        {
          "Name": "OnHitMin",
          "Description": "Fired when the counter value meets or goes below the min value. The counter must go back above the min value before the output will fire again.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnHitMax",
          "Description": "Fired when the counter value meets or exceeds the max value. The counter must go below the max value before the output will fire again.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnChangedFromMin",
          "Description": "Fired when the counter value changes from the minimum value.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnChangedFromMax",
          "Description": "Fired when the counter value changes from the max value.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnGetValue",
          "Description": "Fired in response to the GetValue input. Used for polling the counter when you don\u0027t want constant updates from the OutValue output.",
          "VariableType": "Integer",
          "Type": "Output"
        }
      ]
    }
  ]
}