{
  "Name": "prop_dynamic",
  "Pages": [
    {
      "Game": "cs2",
      "EntityType": "Point",
      "Name": "prop_dynamic",
      "Description": "A prop that can be placed in hierarchy and can play animations and/or simulate cloth. It can also be configured to break when it takes enough damage. Note that the health of the object will be overridden by the health inside the model, to ensure consistent health game-wide. If the model used by the prop is configured to be used as a prop_physics (i.e. it should be physically simulated) then it CANNOT be used as a prop_dynamic. Upon level load it will display a warning in the console and remove itself. Use a prop_physics instead.",
      "IconPath": "",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Start Disabled",
          "InternalName": "StartDisabled",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow State",
          "InternalName": "glowstate",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "OFF",
              "Description": ""
            },
            {
              "Name": "\u002Buse",
              "Description": ""
            },
            {
              "Name": "look-at",
              "Description": ""
            },
            {
              "Name": "ON",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow Range",
          "InternalName": "glowrange",
          "VariableType": "Integer",
          "Description": "Range at which the glow becomes visible. (0 = always visible)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow Range Min",
          "InternalName": "glowrangemin",
          "VariableType": "Integer",
          "Description": "Range at which the glow stops being visible. (0 = always visible)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow Color Override (R G B)",
          "InternalName": "glowcolor",
          "VariableType": "Color255",
          "Description": "Change the render color of the glow.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow Team",
          "InternalName": "glowteam",
          "VariableType": "Integer",
          "Description": "Change the team we glow for.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Render Mode",
          "InternalName": "rendermode",
          "VariableType": "Choices",
          "Description": "Used to set a non-standard rendering mode on this entity. See also \u0027FX Amount\u0027 and \u0027FX Color\u0027.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Color",
              "Description": ""
            },
            {
              "Name": "Texture",
              "Description": ""
            },
            {
              "Name": "Glow",
              "Description": ""
            },
            {
              "Name": "Solid",
              "Description": ""
            },
            {
              "Name": "Additive",
              "Description": ""
            },
            {
              "Name": "Additive Fractional Frame",
              "Description": ""
            },
            {
              "Name": "World Space Glow",
              "Description": ""
            },
            {
              "Name": "Dont Render",
              "Description": ""
            },
            {
              "Name": "Dev Visualizer",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Render FX",
          "InternalName": "renderfx",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Slow Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Strobe",
              "Description": ""
            },
            {
              "Name": "Fast Strobe",
              "Description": ""
            },
            {
              "Name": "Faster Strobe",
              "Description": ""
            },
            {
              "Name": "Slow Flicker",
              "Description": ""
            },
            {
              "Name": "Fast Flicker",
              "Description": ""
            },
            {
              "Name": "Slow Fade Away",
              "Description": ""
            },
            {
              "Name": "Fast Fade Away",
              "Description": ""
            },
            {
              "Name": "Slow Become Solid",
              "Description": ""
            },
            {
              "Name": "Fast Become Solid",
              "Description": ""
            },
            {
              "Name": "Constant Glow",
              "Description": ""
            },
            {
              "Name": "Distort",
              "Description": ""
            },
            {
              "Name": "Hologram (Distort \u002B fade)",
              "Description": ""
            },
            {
              "Name": "Cull By Distance (TEST)",
              "Description": ""
            },
            {
              "Name": "Spotlight FX",
              "Description": ""
            },
            {
              "Name": "Fade Near",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Amount (0 - 255)",
          "InternalName": "renderamt",
          "VariableType": "Integer",
          "Description": "The FX amount is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Color (R G B)",
          "InternalName": "rendercolor",
          "VariableType": "Color255",
          "Description": "The FX color is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable Receiving Shadows",
          "InternalName": "disablereceiveshadows",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Fade Dist",
          "InternalName": "fademindist",
          "VariableType": "Float",
          "Description": "Distance at which the overlay starts to fade (-1 = subtract from fademaxdist).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "End Fade Dist",
          "InternalName": "fademaxdist",
          "VariableType": "Float",
          "Description": "Maximum distance at which the overlay is visible (0 = don\u0027t fade out).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Culling Behaviour",
          "InternalName": "object_culling",
          "VariableType": "Choices",
          "Description": "Modifies culling behaviour when the object is small / distant",
          "Options": [
            {
              "Name": "Default",
              "Description": ""
            },
            {
              "Name": "Smaller than default",
              "Description": ""
            },
            {
              "Name": "Much smaller than default",
              "Description": ""
            },
            {
              "Name": "When extremely small",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Render to Cubemaps",
          "InternalName": "rendertocubemaps",
          "VariableType": "Bool",
          "Description": "If true, this geometry renders into baked cube maps",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lightmap Static",
          "InternalName": "lightmapstatic",
          "VariableType": "Choices",
          "Description": "Determines if this geometry be considered static \u0026 cast shadows/bounce light when baking lightmaps?",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            },
            {
              "Name": "Bounce Only",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Damage Filter",
          "InternalName": "damagefilter",
          "VariableType": "TargetDestination",
          "Description": "Name of the filter entity that controls which entities can damage us.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Damage",
          "InternalName": "ExplodeDamage",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \u0027Explosion Radius\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Radius",
          "InternalName": "ExplodeRadius",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \u0027Explosion Damage\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Performance Mode",
          "InternalName": "PerformanceMode",
          "VariableType": "Choices",
          "Description": "Used to limit the amount of gibs produced when this entity breaks, for performance reasons.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "No Gibs",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable Client-Side Interpolation",
          "InternalName": "NoInterpolate",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "spawnflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Break on Touch",
              "Description": ""
            },
            {
              "Name": "Break on Pressure",
              "Description": ""
            },
            {
              "Name": "Use Hitboxes for Renderbox",
              "Description": ""
            },
            {
              "Name": "Start with collision disabled",
              "Description": ""
            },
            {
              "Name": "Set to Nav Ignore",
              "Description": ""
            },
            {
              "Name": "Set to Local-Nav Ignore (NPC will not try to avoid this entity)",
              "Description": ""
            },
            {
              "Name": "Start Asleep",
              "Description": ""
            },
            {
              "Name": "Don\u0027t take physics damage",
              "Description": ""
            },
            {
              "Name": "Debris - Don\u0027t collide with the player or other debris",
              "Description": ""
            },
            {
              "Name": "Motion Disabled",
              "Description": ""
            },
            {
              "Name": "Prevent motion enable on player bump",
              "Description": ""
            },
            {
              "Name": "Debris with trigger interaction",
              "Description": ""
            },
            {
              "Name": "Force non-solid to players",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Pressure Delay",
          "InternalName": "pressuredelay",
          "VariableType": "Float",
          "Description": "Delay, in seconds, after \u0027broken\u0027 by pressure before breaking apart (allows for sound to play before breaking apart).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Burst Force Scale",
          "InternalName": "burstscale",
          "VariableType": "Float",
          "Description": "Radial force applied to our pieces when we break.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Burst Force Location",
          "InternalName": "burstlocation",
          "VariableType": "LocalPoint",
          "Description": "Location in local space where the burst force is applied.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Contents Type",
          "InternalName": "BreakableContentsType",
          "VariableType": "Choices",
          "Description": "Set the type of contents inside this breakable.",
          "Options": [
            {
              "Name": "Default",
              "Description": ""
            },
            {
              "Name": "Empty",
              "Description": ""
            },
            {
              "Name": "Prop Group Override",
              "Description": ""
            },
            {
              "Name": "Particle System Override",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Breakable Contents Prop Group Override",
          "InternalName": "BreakableContentsPropGroupOverride",
          "VariableType": "VDataChoice",
          "Description": "Prop Group to use when the prop is broken",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Breakable Contents Particle Override",
          "InternalName": "BreakableContentsParticleOverride",
          "VariableType": "ParticleSystem",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "World Model",
          "InternalName": "model",
          "VariableType": "Studio",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Skin",
          "InternalName": "skin",
          "VariableType": "MaterialGroup",
          "Description": "Some models have multiple versions of their textures, called skins.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Body Groups",
          "InternalName": "bodygroups",
          "VariableType": "BodyGroupChoices",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Cast Shadows",
          "InternalName": "disableshadows",
          "VariableType": "Choices",
          "Description": "Used to disable shadow casting from this entity.",
          "Options": [
            {
              "Name": "Enabled",
              "Description": ""
            },
            {
              "Name": "No Shadows",
              "Description": ""
            },
            {
              "Name": "Only Realtime Shadows",
              "Description": ""
            },
            {
              "Name": "Only Baked Shadows",
              "Description": ""
            },
            {
              "Name": "Enabled",
              "Description": ""
            },
            {
              "Name": "No Shadows",
              "Description": ""
            },
            {
              "Name": "Only Realtime Shadows",
              "Description": ""
            },
            {
              "Name": "Only Baked Shadows",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Add Attribute",
          "InternalName": "add_attribute",
          "VariableType": "String",
          "Description": "Will add an additional attribute that AI/player entities can query when checking props for information (ex: \u0027DogToy\u0027 or \u0027GrabbableResource\u0027)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Add Modifier",
          "InternalName": "add_modifier",
          "VariableType": "String",
          "Description": "Will add this modifier when the entity spawns.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Global Entity Name",
          "InternalName": "globalname",
          "VariableType": "String",
          "Description": "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\u0027s state copied over their state.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Create Client-Only Entity",
          "InternalName": "clientSideEntity",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent",
          "InternalName": "parentname",
          "VariableType": "TargetDestination",
          "Description": "The name of this entity\u0027s parent in the movement hierarchy. Entities with parents move with their parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent Bone/Attachment Name",
          "InternalName": "parentAttachmentName",
          "VariableType": "ParentAttachment",
          "Description": "The name of the bone or attachment to attach to on the entity\u0027s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment. NOTE: If this is specified the Hammer transform will be disregarded, even if \u0027Use Local Transform\u0027 is NOT specified (in that case local transform will be identity)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Local Transform",
          "InternalName": "useLocalOffset",
          "VariableType": "Bool",
          "Description": "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Origin",
          "InternalName": "local.origin",
          "VariableType": "Vector",
          "Description": "Offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Angles",
          "InternalName": "local.angles",
          "VariableType": "Angle",
          "Description": "Angular offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Scale",
          "InternalName": "local.scales",
          "VariableType": "Vector",
          "Description": "Scale in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Collisions",
          "InternalName": "solid",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Not Solid",
              "Description": ""
            },
            {
              "Name": "Use axis-aligned box",
              "Description": ""
            },
            {
              "Name": "Use oriented Box",
              "Description": ""
            },
            {
              "Name": "Use VPhysics",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Turn Off in Low-Violence",
          "InternalName": "disablelowviolence",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Animgraph",
          "InternalName": "use_animgraph",
          "VariableType": "Bool",
          "Description": "Allow the model to use its animgraph it has one. If the model has no animgraph this setting has no effect and is disabled",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Starting Animation",
          "InternalName": "StartingAnim",
          "VariableType": "Sequence",
          "Description": "The name of a starting animation that this prop will start with when it spawns. After completion, it will switch to the Idle sequence, if it is specified. This setting is ignored for models with an animgraph when Use Animgraph is enabled.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Animation Loop Mode",
          "InternalName": "StartingAnimationLoopMode",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Do Not Loop",
              "Description": ""
            },
            {
              "Name": "Loop",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Idle Animation",
          "InternalName": "IdleAnim",
          "VariableType": "Sequence",
          "Description": "The name of the idle animation that this prop will revert to whenever it finishes a random or forced animation. This setting is ignored for models with an animgraph when Use Animgraph is enabled.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Idle Animation Loop Mode",
          "InternalName": "IdleAnimationLoopMode",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Do Not Loop",
              "Description": ""
            },
            {
              "Name": "Loop",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Randomize cycle",
          "InternalName": "randomizecycle",
          "VariableType": "Bool",
          "Description": "If set, this prop will randomize its cycle when it begins animating. Use this to desynchronize animating props that use the same model.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lag Compensation",
          "InternalName": "LagCompensate",
          "VariableType": "Bool",
          "Description": "Enable to lag compensate this prop, should be use very sparingly!",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Animate on server in multiplayer",
          "InternalName": "AnimateOnServer",
          "VariableType": "Bool",
          "Description": "Enable this to animate on the server in multiplayer games, such as for props with triggers parented to attachment points. Use sparingly as there is a performance cost.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "interactAs",
          "InternalName": "interactAs",
          "VariableType": "String",
          "Description": "comma-separated list of interaction layers to interact as",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "interactWith",
          "InternalName": "interactWith",
          "VariableType": "String",
          "Description": "comma-separated list of interaction layers to interact with",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "interactExclude",
          "InternalName": "interactExclude",
          "VariableType": "String",
          "Description": "comma-separated list of interaction layers to not collide with",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lighting Origin",
          "InternalName": "lightingorigin",
          "VariableType": "TargetDestination",
          "Description": "Select an entity to specify a location to sample lighting from, instead of using this entity\u0027s origin.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Create Nav Obstacle",
          "InternalName": "CreateNavObstacle",
          "VariableType": "Bool",
          "Description": "Create a navigation obstacle to assist NPC pathfinding",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Force NPC Exclude",
          "InternalName": "forcenpcexclude",
          "VariableType": "Bool",
          "Description": "If set, NPC movement will ignore this prop",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Cloth Scale",
          "InternalName": "clothScale",
          "VariableType": "Float",
          "Description": "Cloth scale (stretch) relative to model scale. Use to stretch (not scale) the model, e.g. to reuse a single rope model when different lengths of the rope needed.",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "Enable",
          "Description": "Enable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Disable",
          "Description": "Disable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "StartGlowing",
          "Description": "Turn on a permanent glow effect for this prop.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "StopGlowing",
          "Description": "Turn off this prop\u0027s glow effect.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Alpha",
          "Description": "Set the sprite\u0027s alpha (0 - 255).",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Color",
          "Description": "Set the sprite\u0027s color (R G B).",
          "VariableType": "Color255",
          "Type": "Input"
        },
        {
          "Name": "SetDamageFilter",
          "Description": "Sets the entity to use as damage filter. Pass in an empty string to clear the damage filter.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillConstrained",
          "Description": "Removes this entity, all its children, and anything constrained to it, from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game. Parameter is the inflictor.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Break",
          "Description": "Breaks the breakable.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetHealth",
          "Description": "Sets a new value for the breakable\u0027s health. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "AddHealth",
          "Description": "Adds health to the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "RemoveHealth",
          "Description": "Removes health from the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetMass",
          "Description": "Set mass of this object.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "OnStartDeath",
          "Description": "Fired when this prop has begun dying (breaking) before other death-related callbacks.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnBreak",
          "Description": "Fired when this breakable breaks.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnHealthChanged",
          "Description": "Fired when the health of this breakable changes, passing the new value of health as a percentage of max health, from [0..1].",
          "VariableType": "Float",
          "Type": "Output"
        },
        {
          "Name": "OnTakeDamage",
          "Description": "Fired each time this breakable takes any damage.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Skin",
          "Description": "Changes the model skin to the specified number.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "DisableShadow",
          "Description": "Turn shadow off.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableShadow",
          "Description": "Turn shadow on.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AlternativeSorting",
          "Description": "Used to attempt to fix sorting problems when rendering. True activates, false deactivates",
          "VariableType": "Bool",
          "Type": "Input"
        },
        {
          "Name": "SetRenderAttribute",
          "Description": "Set the value of a render attribute used in material dynamic expressions. Examples: $myfloat=0.25 $myfloat4=1.0,0.0,1.0,1.0",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearRenderAttribute",
          "Description": "Remove a render attribute previously set by SetRenderAttribute, restoring it to its previous value.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "OnIgnite",
          "Description": "Fired when this object catches fire.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnDestructiblePartDestroyed",
          "Description": "",
          "VariableType": "Cpp",
          "Type": "Output"
        },
        {
          "Name": "SetParent",
          "Description": "Changes the entity\u0027s parent in the movement hierarchy.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachment",
          "Description": "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachmentMaintainOffset",
          "Description": "Change this entity to attach to a specific attachment point on it\u0027s parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it\u0027s position relative to the parent at the time it is attached.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearParent",
          "Description": "Removes this entity from the the movement hierarchy, leaving it free to move independently.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FollowEntity",
          "Description": "Bone merges this entity to a parent entity. Call again passing nothing to end the bone merge.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetAnimationLooping",
          "Description": "Force the prop to play an animation and force it to loop. The parameter should be the name of the animation.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetAnimationNoResetLooping",
          "Description": "Force the prop to play an animation and force it to loop unless the prop is already playing the animation. The parameter should be the name of the animation.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetIdleAnimationLooping",
          "Description": "Changes the Idle Animation to the one specified in the parameter and force it to loop.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetAnimationNotLooping",
          "Description": "Force the prop to play an animation and force it to not loop. The parameter should be the name of the animation.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetAnimationNoResetNotLooping",
          "Description": "Force the prop to play an animation and force it to not loop unless the prop is already playing the animation. The parameter should be the name of the animation.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetIdleAnimationNotLooping",
          "Description": "Changes the Idle Animation to the one specified in the parameter and force it to not loop.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetPlaybackRate",
          "Description": "Set the playback rate for the animation.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "SetBodyGroup",
          "Description": "Sets bodygroup. Format is \u0026lt;BodygroupName,index\u0026gt; ",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "TurnOn",
          "Description": "Make the prop visible.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "TurnOff",
          "Description": "Make the prop invisible.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableCollision",
          "Description": "Enable collision on the prop.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableCollision",
          "Description": "Disable collision on the prop.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetNavIgnore",
          "Description": "Enable and disable NAVIgnore on the prop.",
          "VariableType": "Bool",
          "Type": "Input"
        },
        {
          "Name": "SetAnimGraphParameter",
          "Description": "Set an animation graph parameter Format: \u0026lt;name=value\u0026gt;",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetRagdollProfile",
          "Description": "Sets the active ragdoll profile.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "OnAnimationBegun",
          "Description": "Fired whenever a new animation has begun playing.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationDone",
          "Description": "Fired whenever an animation is complete.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationReachedEnd",
          "Description": "Fired whenever a non-looping animation playing forward hits the end (cycle=1).",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationReachedStart",
          "Description": "Fired whenever a non-looping animation playing backward hits the beginning (cycle=0).",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationLoopCycleDone",
          "Description": "Fires off an event when the current cycle of a looped animation is complete.",
          "VariableType": "Void",
          "Type": "Output"
        }
      ]
    },
    {
      "Game": "hla",
      "EntityType": "Point",
      "Name": "prop_dynamic",
      "Description": "A prop that can be placed in hierarchy and can play animations and/or simulate cloth. It can also be configured to break when it takes enough damage. Note that the health of the object will be overridden by the health inside the model, to ensure consistent health game-wide. If the model used by the prop is configured to be used as a prop_physics (i.e. it should be physically simulated) then it CANNOT be used as a prop_dynamic. Upon level load it will display a warning in the console and remove itself. Use a prop_physics instead.",
      "IconPath": "",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Start Disabled",
          "InternalName": "StartDisabled",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow State",
          "InternalName": "glowstate",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "OFF",
              "Description": ""
            },
            {
              "Name": "\u002Buse",
              "Description": ""
            },
            {
              "Name": "look-at",
              "Description": ""
            },
            {
              "Name": "ON",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow Range",
          "InternalName": "glowrange",
          "VariableType": "Integer",
          "Description": "Range at which the glow becomes visible. (0 = always visible)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow Range Min",
          "InternalName": "glowrangemin",
          "VariableType": "Integer",
          "Description": "Range at which the glow stops being visible. (0 = always visible)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow Color Override (R G B)",
          "InternalName": "glowcolor",
          "VariableType": "Color255",
          "Description": "Change the render color of the glow.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Render Mode",
          "InternalName": "rendermode",
          "VariableType": "Choices",
          "Description": "Used to set a non-standard rendering mode on this entity. See also \u0027FX Amount\u0027 and \u0027FX Color\u0027.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Color",
              "Description": ""
            },
            {
              "Name": "Texture",
              "Description": ""
            },
            {
              "Name": "Glow",
              "Description": ""
            },
            {
              "Name": "Solid",
              "Description": ""
            },
            {
              "Name": "Additive",
              "Description": ""
            },
            {
              "Name": "Additive Fractional Frame",
              "Description": ""
            },
            {
              "Name": "World Space Glow",
              "Description": ""
            },
            {
              "Name": "Dont Render",
              "Description": ""
            },
            {
              "Name": "Dev Visualizer",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Render FX",
          "InternalName": "renderfx",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Slow Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Strobe",
              "Description": ""
            },
            {
              "Name": "Fast Strobe",
              "Description": ""
            },
            {
              "Name": "Faster Strobe",
              "Description": ""
            },
            {
              "Name": "Slow Flicker",
              "Description": ""
            },
            {
              "Name": "Fast Flicker",
              "Description": ""
            },
            {
              "Name": "Slow Fade Away",
              "Description": ""
            },
            {
              "Name": "Fast Fade Away",
              "Description": ""
            },
            {
              "Name": "Slow Become Solid",
              "Description": ""
            },
            {
              "Name": "Fast Become Solid",
              "Description": ""
            },
            {
              "Name": "Constant Glow",
              "Description": ""
            },
            {
              "Name": "Distort",
              "Description": ""
            },
            {
              "Name": "Hologram (Distort \u002B fade)",
              "Description": ""
            },
            {
              "Name": "Cull By Distance (TEST)",
              "Description": ""
            },
            {
              "Name": "Spotlight FX",
              "Description": ""
            },
            {
              "Name": "Fade Near",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Amount (0 - 255)",
          "InternalName": "renderamt",
          "VariableType": "Integer",
          "Description": "The FX amount is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Color (R G B)",
          "InternalName": "rendercolor",
          "VariableType": "Color255",
          "Description": "The FX color is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable Receiving Shadows",
          "InternalName": "disablereceiveshadows",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Light Group",
          "InternalName": "lightgroup",
          "VariableType": "String",
          "Description": "Will only be lit by lights affecting this group.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Fade Dist",
          "InternalName": "fademindist",
          "VariableType": "Float",
          "Description": "Distance at which the overlay starts to fade (\u0026lt;0 = subtract from fademaxdist).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "End Fade Dist",
          "InternalName": "fademaxdist",
          "VariableType": "Float",
          "Description": "Maximum distance at which the overlay is visible (0 = don\u0027t fade out).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Fade Scale",
          "InternalName": "fadescale",
          "VariableType": "Float",
          "Description": "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\u0027t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Render to Cubemaps",
          "InternalName": "rendertocubemaps",
          "VariableType": "Bool",
          "Description": "If true, this geometry renders into baked cube maps",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lightmap Static",
          "InternalName": "lightmapstatic",
          "VariableType": "Choices",
          "Description": "How this geometry influences baked lighting.",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            },
            {
              "Name": "Bounce Only",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum CPU Level",
          "InternalName": "mincpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (low)",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Maximum CPU Level",
          "InternalName": "maxcpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (high)",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum GPU Level",
          "InternalName": "mingpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (very low)",
              "Description": ""
            },
            {
              "Name": "very low",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Maximum GPU Level",
          "InternalName": "maxgpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (high)",
              "Description": ""
            },
            {
              "Name": "very low",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable X360",
          "InternalName": "disableX360",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Damage Filter",
          "InternalName": "damagefilter",
          "VariableType": "TargetDestination",
          "Description": "Name of the filter entity that controls which entities can damage us.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Damage",
          "InternalName": "ExplodeDamage",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \u0027Explosion Radius\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Radius",
          "InternalName": "ExplodeRadius",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \u0027Explosion Damage\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Performance Mode",
          "InternalName": "PerformanceMode",
          "VariableType": "Choices",
          "Description": "Used to limit the amount of gibs produced when this entity breaks, for performance reasons.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "No Gibs",
              "Description": ""
            },
            {
              "Name": "Full Gibs on All Platforms",
              "Description": ""
            },
            {
              "Name": "Reduced gibs",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "spawnflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Break on Touch",
              "Description": ""
            },
            {
              "Name": "Break on Pressure",
              "Description": ""
            },
            {
              "Name": "Use Hitboxes for Renderbox",
              "Description": ""
            },
            {
              "Name": "Start with collision disabled",
              "Description": ""
            },
            {
              "Name": "Set to NAVIgnore",
              "Description": ""
            },
            {
              "Name": "Start Asleep",
              "Description": ""
            },
            {
              "Name": "Don\u0027t take physics damage",
              "Description": ""
            },
            {
              "Name": "Debris - Don\u0027t collide with the player or other debris",
              "Description": ""
            },
            {
              "Name": "Motion Disabled",
              "Description": ""
            },
            {
              "Name": "Enable motion on Physcannon grab (This also applies to the HLVR hand interaction)",
              "Description": ""
            },
            {
              "Name": "Not affected by rotor wash",
              "Description": ""
            },
            {
              "Name": "Generate output on \u002BUSE ",
              "Description": ""
            },
            {
              "Name": "Prevent pickup",
              "Description": ""
            },
            {
              "Name": "Prevent motion enable on player bump",
              "Description": ""
            },
            {
              "Name": "Debris with trigger interaction",
              "Description": ""
            },
            {
              "Name": "Force non-solid to players",
              "Description": ""
            },
            {
              "Name": "Enable \u002Buse glow effect",
              "Description": ""
            },
            {
              "Name": "Physgun can ALWAYS pick up. No matter what.",
              "Description": ""
            },
            {
              "Name": "Important Grabbity Glove target.",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Pressure Delay",
          "InternalName": "pressuredelay",
          "VariableType": "Float",
          "Description": "Delay, in seconds, after \u0027broken\u0027 by pressure before breaking apart (allows for sound to play before breaking apart).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "World Model",
          "InternalName": "model",
          "VariableType": "Studio",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Skin",
          "InternalName": "skin",
          "VariableType": "MaterialGroup",
          "Description": "Some models have multiple versions of their textures, called skins.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Body Groups",
          "InternalName": "bodygroups",
          "VariableType": "BodyGroupChoices",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable Shadows",
          "InternalName": "disableshadows",
          "VariableType": "Bool",
          "Description": "Used to disable dynamic shadows on this entity.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Global Entity Name",
          "InternalName": "globalname",
          "VariableType": "String",
          "Description": "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\u0027s state copied over their state.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent",
          "InternalName": "parentname",
          "VariableType": "TargetDestination",
          "Description": "The name of this entity\u0027s parent in the movement hierarchy. Entities with parents move with their parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent Model Bone/Attachment Name",
          "InternalName": "parentAttachmentName",
          "VariableType": "ParentAttachment",
          "Description": "The name of the bone or attachment to attach to on the entity\u0027s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment position offset",
          "InternalName": "local.origin",
          "VariableType": "Vector",
          "Description": "Offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment angular offset",
          "InternalName": "local.angles",
          "VariableType": "Angle",
          "Description": "Angular offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment scale",
          "InternalName": "local.scales",
          "VariableType": "Vector",
          "Description": "Scale in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Model Attachment Offset",
          "InternalName": "useLocalOffset",
          "VariableType": "Bool",
          "Description": "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Collisions",
          "InternalName": "solid",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Not Solid",
              "Description": ""
            },
            {
              "Name": "Use axis-aligned box",
              "Description": ""
            },
            {
              "Name": "Use oriented Box",
              "Description": ""
            },
            {
              "Name": "Use VPhysics",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Turn Off in Low-Violence",
          "InternalName": "disablelowviolence",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Default Animation",
          "InternalName": "DefaultAnim",
          "VariableType": "Sequence",
          "Description": "The name of the idle animation that this prop will revert to whenever it finishes a random or forced animation.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Randomly Animate",
          "InternalName": "RandomAnimation",
          "VariableType": "Bool",
          "Description": "If set, this prop will randomly choose and play animations, based upon the times specified in \u0027Min/Max Random Anim Time\u0027. Inbetween the random animations, it will revert to playing the \u0027Default Animation\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Hold Animation",
          "InternalName": "HoldAnimation",
          "VariableType": "Bool",
          "Description": "If set, the prop will not loop its animation, but hold the last frame.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Randomize cycle",
          "InternalName": "randomizecycle",
          "VariableType": "Bool",
          "Description": "If set, this prop will randomize its cycle when it begins animating. Use this to desynchronize animating props that use the same model.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Min Random Anim Time",
          "InternalName": "MinAnimTime",
          "VariableType": "Float",
          "Description": "Minimum time between random animations.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Max Random Anim Time",
          "InternalName": "MaxAnimTime",
          "VariableType": "Float",
          "Description": "Maximum time between random animations.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lag Compensation",
          "InternalName": "LagCompensate",
          "VariableType": "Bool",
          "Description": "Enable to lag compensate this prop, should be use very sparingly!",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Animate on server in multiplayer",
          "InternalName": "AnimateOnServer",
          "VariableType": "Bool",
          "Description": "Enable this to animate on the server in multiplayer games, such as for props with triggers parented to attachment points. Use sparingly as there is a performance cost.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Scripted Movement",
          "InternalName": "ScriptedMovement",
          "VariableType": "Bool",
          "Description": "Set this to allow vscript code to move the prop via SetVelocity() calls.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Initial Velocity",
          "InternalName": "velocity",
          "VariableType": "Vector",
          "Description": "Only used if Scripted Movement is set, sets an initial linear velocity for the entity.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Initial Rotational Velocity",
          "InternalName": "avelocity",
          "VariableType": "Vector",
          "Description": "Only used if Scripted Movement is set, sets an initial rotational velocity for the entity.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lighting Origin",
          "InternalName": "lightingorigin",
          "VariableType": "TargetDestination",
          "Description": "Select an entity to specify a location to sample lighting from, instead of using this entity\u0027s origin.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Update children",
          "InternalName": "updatechildren",
          "VariableType": "Bool",
          "Description": "Update touches for any children that are attached to attachment points as this prop animates. This allows SetParentAttached triggers or func_brushes to touch properly.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Allow Animgraph",
          "InternalName": "use_animgraph",
          "VariableType": "Bool",
          "Description": "Allow this entity to use its animgraph",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Create Nav Obstacle",
          "InternalName": "CreateNavObstacle",
          "VariableType": "Bool",
          "Description": "Create a navigation obstacle to assist NPC pathfinding",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Force NPC Exclude",
          "InternalName": "forcenpcexclude",
          "VariableType": "Bool",
          "Description": "If set, NPC movement will ignore this prop",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Cloth Scale",
          "InternalName": "clothScale",
          "VariableType": "Float",
          "Description": "Cloth scale (stretch) relative to model scale. Use to stretch (not scale) the model, e.g. to reuse a single rope model when different lengths of the rope needed.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Bias Lighting Origin Towards Player",
          "InternalName": "fixup_lighting_origin_to_player_side",
          "VariableType": "Bool",
          "Description": "For windows and doors and other dynamic things that straddle lighting volume boundaries - bias the lighting origin toward whichever side the local player is on",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "Enable",
          "Description": "Enable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Disable",
          "Description": "Disable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "StartGlowing",
          "Description": "Turn on a permanent glow effect for this prop.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "StopGlowing",
          "Description": "Turn off this prop\u0027s glow effect.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Alpha",
          "Description": "Set the sprite\u0027s alpha (0 - 255).",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Color",
          "Description": "Set the sprite\u0027s color (R G B).",
          "VariableType": "Color255",
          "Type": "Input"
        },
        {
          "Name": "SetDamageFilter",
          "Description": "Sets the entity to use as damage filter. Pass in an empty string to clear the damage filter.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Break",
          "Description": "Breaks the breakable.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetHealth",
          "Description": "Sets a new value for the breakable\u0027s health. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "AddHealth",
          "Description": "Adds health to the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "RemoveHealth",
          "Description": "Removes health from the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetMass",
          "Description": "Set mass of this object.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "OnBreak",
          "Description": "Fired when this breakable breaks.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnHealthChanged",
          "Description": "Fired when the health of this breakable changes, passing the new value of health as a percentage of max health, from [0..1].",
          "VariableType": "Float",
          "Type": "Output"
        },
        {
          "Name": "EnablePhyscannonPickup",
          "Description": "Makes the breakable able to picked up by the physcannon.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisablePhyscannonPickup",
          "Description": "Makes the breakable not able to picked up by the physcannon.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnTakeDamage",
          "Description": "Fired each time this breakable takes any damage.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysCannonDetach",
          "Description": "Fired when the physcannon has ripped this breakable off of the wall. Only fired if ACT_PHYSCANNON_DETACH is defined in the model this breakable is using.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysCannonAnimatePreStarted",
          "Description": "Fired when this prop starts playing the Pre physcannon-pull activity, caused by the player trying to grab this prop with the physcannon. Only fired if the ACT_PHYSCANNON_ANIMATE_PRE activity is defined in the model this breakable is using.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysCannonAnimatePullStarted",
          "Description": "Fired when this prop starts playing the physcannon-pull activity, caused by the player trying to grab this prop with the physcannon. Only fired if the ACT_PHYSCANNON_ANIMATE activity is defined in the model this breakable is using. If the prop has Pre pull anim, this will be fired after the Pre anim has finished playing.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysCannonPullAnimFinished",
          "Description": "Fired when this prop has finished playing the physcannon-pull activity, caused by the player trying to grab this prop with the physcannon. Only fired if the ACT_PHYSCANNON_ANIMATE activity is defined in the model this breakable is using. If the prop has Pre \u0026 Post pull anims, this will be fired after the Post anim has finished playing.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysCannonAnimatePostStarted",
          "Description": "Fired when this prop starts playing the Post physcannon-pull activity. Only fired if the ACT_PHYSCANNON_ANIMATE_POST activity is defined in the model this breakable is using.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Skin",
          "Description": "Changes the model skin to the specified number.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "DisableShadow",
          "Description": "Turn shadow off.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableShadow",
          "Description": "Turn shadow on.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AlternativeSorting",
          "Description": "Used to attempt to fix sorting problems when rendering. True activates, false deactivates",
          "VariableType": "Bool",
          "Type": "Input"
        },
        {
          "Name": "SetRenderAttribute",
          "Description": "Set the value of a render attribute used in material dynamic expressions. Examples: $myfloat=0.25 $myfloat4=1.0,0.0,1.0,1.0",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "OnIgnite",
          "Description": "Fired when this object catches fire.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "SetParent",
          "Description": "Changes the entity\u0027s parent in the movement hierarchy.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachment",
          "Description": "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachmentMaintainOffset",
          "Description": "Change this entity to attach to a specific attachment point on it\u0027s parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it\u0027s position relative to the parent at the time it is attached.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearParent",
          "Description": "Removes this entity from the the movement hierarchy, leaving it free to move independently.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetAnimation",
          "Description": "Force the prop to play an animation. The parameter should be the name of the animation.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetAnimationNoReset",
          "Description": "Force the prop to play an animation unless the prop is already playing the animation. The parameter should be the name of the animation.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetAnimationTransition",
          "Description": "Force the prop to play an animation. The parameter should be the name of the animation. The second animation is the name of the animation it\u0027s transitioning from. If that one is still playing it\u0027ll just reverse from the current frame.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetDefaultAnimation",
          "Description": "Set the Default Animation to the one specified in the parameter.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetPlaybackRate",
          "Description": "Set the playback rate for the animation.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "SetBodyGroup",
          "Description": "Sets bodygroup. Format is \u0026lt;BodygroupName,index\u0026gt; ",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "TurnOn",
          "Description": "Make the prop visible.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "TurnOff",
          "Description": "Make the prop invisible.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableCollision",
          "Description": "Enable collision on the prop.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableCollision",
          "Description": "Disable collision on the prop.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetNavIgnore",
          "Description": "Enable and disable NAVIgnore on the prop.",
          "VariableType": "Bool",
          "Type": "Input"
        },
        {
          "Name": "SetAnimGraphParameter",
          "Description": "Set an animation graph parameter Format: \u0026lt;name=value\u0026gt;",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "OnAnimationBegun",
          "Description": "Fired whenever a new animation has begun playing.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationDone",
          "Description": "Fired whenever an animation is complete.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationReachedEnd",
          "Description": "Fired whenever a non-looping animation playing forward hits the end (cycle=1).",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationReachedStart",
          "Description": "Fired whenever a non-looping animation playing backward hits the beginning (cycle=0).",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationLoopCycleDone",
          "Description": "Fires off an event when the current cycle of a looped animation is complete.",
          "VariableType": "Void",
          "Type": "Output"
        }
      ]
    },
    {
      "Game": "dota2",
      "EntityType": "Point",
      "Name": "prop_dynamic",
      "Description": "A prop that can be placed in hierarchy and can play animations and/or simulate cloth. It can also be configured to break when it takes enough damage. Note that the health of the object will be overridden by the health inside the model, to ensure consistent health game-wide. If the model used by the prop is configured to be used as a prop_physics (i.e. it should be physically simulated) then it CANNOT be used as a prop_dynamic. Upon level load it will display a warning in the console and remove itself. Use a prop_physics instead.",
      "IconPath": "",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Start Disabled",
          "InternalName": "StartDisabled",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow State",
          "InternalName": "glowstate",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "OFF",
              "Description": ""
            },
            {
              "Name": "\u002Buse",
              "Description": ""
            },
            {
              "Name": "look-at",
              "Description": ""
            },
            {
              "Name": "ON",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow Range",
          "InternalName": "glowrange",
          "VariableType": "Integer",
          "Description": "Range at which the glow becomes visible. (0 = always visible)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow Range Min",
          "InternalName": "glowrangemin",
          "VariableType": "Integer",
          "Description": "Range at which the glow stops being visible. (0 = always visible)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow Color Override (R G B)",
          "InternalName": "glowcolor",
          "VariableType": "Color255",
          "Description": "Change the render color of the glow.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow Team",
          "InternalName": "glowteam",
          "VariableType": "Integer",
          "Description": "Change the team we glow for.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Render Mode",
          "InternalName": "rendermode",
          "VariableType": "Choices",
          "Description": "Used to set a non-standard rendering mode on this entity. See also \u0027FX Amount\u0027 and \u0027FX Color\u0027.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Color",
              "Description": ""
            },
            {
              "Name": "Texture",
              "Description": ""
            },
            {
              "Name": "Glow",
              "Description": ""
            },
            {
              "Name": "Solid",
              "Description": ""
            },
            {
              "Name": "Additive",
              "Description": ""
            },
            {
              "Name": "Additive Fractional Frame",
              "Description": ""
            },
            {
              "Name": "World Space Glow",
              "Description": ""
            },
            {
              "Name": "Dont Render",
              "Description": ""
            },
            {
              "Name": "Dev Visualizer",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Render FX",
          "InternalName": "renderfx",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Slow Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Strobe",
              "Description": ""
            },
            {
              "Name": "Fast Strobe",
              "Description": ""
            },
            {
              "Name": "Faster Strobe",
              "Description": ""
            },
            {
              "Name": "Slow Flicker",
              "Description": ""
            },
            {
              "Name": "Fast Flicker",
              "Description": ""
            },
            {
              "Name": "Slow Fade Away",
              "Description": ""
            },
            {
              "Name": "Fast Fade Away",
              "Description": ""
            },
            {
              "Name": "Slow Become Solid",
              "Description": ""
            },
            {
              "Name": "Fast Become Solid",
              "Description": ""
            },
            {
              "Name": "Constant Glow",
              "Description": ""
            },
            {
              "Name": "Distort",
              "Description": ""
            },
            {
              "Name": "Hologram (Distort \u002B fade)",
              "Description": ""
            },
            {
              "Name": "Cull By Distance (TEST)",
              "Description": ""
            },
            {
              "Name": "Spotlight FX",
              "Description": ""
            },
            {
              "Name": "Fade Near",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Amount (0 - 255)",
          "InternalName": "renderamt",
          "VariableType": "Integer",
          "Description": "The FX amount is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Color (R G B)",
          "InternalName": "rendercolor",
          "VariableType": "Color255",
          "Description": "The FX color is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable Receiving Shadows",
          "InternalName": "disablereceiveshadows",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Fade Dist",
          "InternalName": "fademindist",
          "VariableType": "Float",
          "Description": "Distance at which the overlay starts to fade (-1 = subtract from fademaxdist).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "End Fade Dist",
          "InternalName": "fademaxdist",
          "VariableType": "Float",
          "Description": "Maximum distance at which the overlay is visible (0 = don\u0027t fade out).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Culling Behaviour",
          "InternalName": "object_culling",
          "VariableType": "Choices",
          "Description": "Modifies culling behaviour when the object is small / distant",
          "Options": [
            {
              "Name": "Default",
              "Description": ""
            },
            {
              "Name": "Smaller than default",
              "Description": ""
            },
            {
              "Name": "Much smaller than default",
              "Description": ""
            },
            {
              "Name": "When extremely small",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Render to Cubemaps",
          "InternalName": "rendertocubemaps",
          "VariableType": "Bool",
          "Description": "If true, this geometry renders into baked cube maps",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lightmap Static",
          "InternalName": "lightmapstatic",
          "VariableType": "Choices",
          "Description": "Determines if this geometry be considered static \u0026 cast shadows/bounce light when baking lightmaps?",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            },
            {
              "Name": "Bounce Only",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Damage Filter",
          "InternalName": "damagefilter",
          "VariableType": "TargetDestination",
          "Description": "Name of the filter entity that controls which entities can damage us.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Damage",
          "InternalName": "ExplodeDamage",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \u0027Explosion Radius\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Radius",
          "InternalName": "ExplodeRadius",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \u0027Explosion Damage\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Performance Mode",
          "InternalName": "PerformanceMode",
          "VariableType": "Choices",
          "Description": "Used to limit the amount of gibs produced when this entity breaks, for performance reasons.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "No Gibs",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable Client-Side Interpolation",
          "InternalName": "NoInterpolate",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "spawnflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Break on Touch",
              "Description": ""
            },
            {
              "Name": "Break on Pressure",
              "Description": ""
            },
            {
              "Name": "Use Hitboxes for Renderbox",
              "Description": ""
            },
            {
              "Name": "Start with collision disabled",
              "Description": ""
            },
            {
              "Name": "Set to Nav Ignore",
              "Description": ""
            },
            {
              "Name": "Set to Local-Nav Ignore (NPC will not try to avoid this entity)",
              "Description": ""
            },
            {
              "Name": "Start Asleep",
              "Description": ""
            },
            {
              "Name": "Don\u0027t take physics damage",
              "Description": ""
            },
            {
              "Name": "Debris - Don\u0027t collide with the player or other debris",
              "Description": ""
            },
            {
              "Name": "Motion Disabled",
              "Description": ""
            },
            {
              "Name": "Prevent motion enable on player bump",
              "Description": ""
            },
            {
              "Name": "Debris with trigger interaction",
              "Description": ""
            },
            {
              "Name": "Force non-solid to players",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Pressure Delay",
          "InternalName": "pressuredelay",
          "VariableType": "Float",
          "Description": "Delay, in seconds, after \u0027broken\u0027 by pressure before breaking apart (allows for sound to play before breaking apart).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Burst Force Scale",
          "InternalName": "burstscale",
          "VariableType": "Float",
          "Description": "Radial force applied to our pieces when we break.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Burst Force Location",
          "InternalName": "burstlocation",
          "VariableType": "LocalPoint",
          "Description": "Location in local space where the burst force is applied.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Contents Type",
          "InternalName": "BreakableContentsType",
          "VariableType": "Choices",
          "Description": "Set the type of contents inside this breakable.",
          "Options": [
            {
              "Name": "Default",
              "Description": ""
            },
            {
              "Name": "Empty",
              "Description": ""
            },
            {
              "Name": "Prop Group Override",
              "Description": ""
            },
            {
              "Name": "Particle System Override",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Breakable Contents Prop Group Override",
          "InternalName": "BreakableContentsPropGroupOverride",
          "VariableType": "VDataChoice",
          "Description": "Prop Group to use when the prop is broken",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Breakable Contents Particle Override",
          "InternalName": "BreakableContentsParticleOverride",
          "VariableType": "ParticleSystem",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "World Model",
          "InternalName": "model",
          "VariableType": "Studio",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Skin",
          "InternalName": "skin",
          "VariableType": "MaterialGroup",
          "Description": "Some models have multiple versions of their textures, called skins.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Body Groups",
          "InternalName": "bodygroups",
          "VariableType": "BodyGroupChoices",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Cast Shadows",
          "InternalName": "disableshadows",
          "VariableType": "Choices",
          "Description": "Used to disable shadow casting from this entity.",
          "Options": [
            {
              "Name": "Enabled",
              "Description": ""
            },
            {
              "Name": "No Shadows",
              "Description": ""
            },
            {
              "Name": "Only Realtime Shadows",
              "Description": ""
            },
            {
              "Name": "Only Baked Shadows",
              "Description": ""
            },
            {
              "Name": "Enabled",
              "Description": ""
            },
            {
              "Name": "No Shadows",
              "Description": ""
            },
            {
              "Name": "Only Realtime Shadows",
              "Description": ""
            },
            {
              "Name": "Only Baked Shadows",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Add Attribute",
          "InternalName": "add_attribute",
          "VariableType": "String",
          "Description": "Will add an additional attribute that AI/player entities can query when checking props for information (ex: \u0027DogToy\u0027 or \u0027GrabbableResource\u0027)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Add Modifier",
          "InternalName": "add_modifier",
          "VariableType": "String",
          "Description": "Will add this modifier when the entity spawns.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Global Entity Name",
          "InternalName": "globalname",
          "VariableType": "String",
          "Description": "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\u0027s state copied over their state.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Create Client-Only Entity",
          "InternalName": "clientSideEntity",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent",
          "InternalName": "parentname",
          "VariableType": "TargetDestination",
          "Description": "The name of this entity\u0027s parent in the movement hierarchy. Entities with parents move with their parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent Bone/Attachment Name",
          "InternalName": "parentAttachmentName",
          "VariableType": "ParentAttachment",
          "Description": "The name of the bone or attachment to attach to on the entity\u0027s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment. NOTE: If this is specified the Hammer transform will be disregarded, even if \u0027Use Local Transform\u0027 is NOT specified (in that case local transform will be identity)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Local Transform",
          "InternalName": "useLocalOffset",
          "VariableType": "Bool",
          "Description": "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Origin",
          "InternalName": "local.origin",
          "VariableType": "Vector",
          "Description": "Offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Angles",
          "InternalName": "local.angles",
          "VariableType": "Angle",
          "Description": "Angular offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Local Scale",
          "InternalName": "local.scales",
          "VariableType": "Vector",
          "Description": "Scale in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Collisions",
          "InternalName": "solid",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Not Solid",
              "Description": ""
            },
            {
              "Name": "Use axis-aligned box",
              "Description": ""
            },
            {
              "Name": "Use oriented Box",
              "Description": ""
            },
            {
              "Name": "Use VPhysics",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Turn Off in Low-Violence",
          "InternalName": "disablelowviolence",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Animgraph",
          "InternalName": "use_animgraph",
          "VariableType": "Bool",
          "Description": "Allow the model to use its animgraph it has one. If the model has no animgraph this setting has no effect and is disabled",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Starting Animation",
          "InternalName": "StartingAnim",
          "VariableType": "Sequence",
          "Description": "The name of a starting animation that this prop will start with when it spawns. After completion, it will switch to the Idle sequence, if it is specified. This setting is ignored for models with an animgraph when Use Animgraph is enabled.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Animation Loop Mode",
          "InternalName": "StartingAnimationLoopMode",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Do Not Loop",
              "Description": ""
            },
            {
              "Name": "Loop",
              "Description": ""
            },
            {
              "Name": "Do Not Loop",
              "Description": ""
            },
            {
              "Name": "Loop",
              "Description": ""
            },
            {
              "Name": "Use Sequence Settings",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Idle Animation",
          "InternalName": "IdleAnim",
          "VariableType": "Sequence",
          "Description": "The name of the idle animation that this prop will revert to whenever it finishes a random or forced animation. This setting is ignored for models with an animgraph when Use Animgraph is enabled.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Idle Animation Loop Mode",
          "InternalName": "IdleAnimationLoopMode",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Do Not Loop",
              "Description": ""
            },
            {
              "Name": "Loop",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Randomize cycle",
          "InternalName": "randomizecycle",
          "VariableType": "Bool",
          "Description": "If set, this prop will randomize its cycle when it begins animating. Use this to desynchronize animating props that use the same model.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lag Compensation",
          "InternalName": "LagCompensate",
          "VariableType": "Bool",
          "Description": "Enable to lag compensate this prop, should be use very sparingly!",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Animate on server in multiplayer",
          "InternalName": "AnimateOnServer",
          "VariableType": "Bool",
          "Description": "Enable this to animate on the server in multiplayer games, such as for props with triggers parented to attachment points. Use sparingly as there is a performance cost.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "interactAs",
          "InternalName": "interactAs",
          "VariableType": "String",
          "Description": "comma-separated list of interaction layers to interact as",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "interactWith",
          "InternalName": "interactWith",
          "VariableType": "String",
          "Description": "comma-separated list of interaction layers to interact with",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "interactExclude",
          "InternalName": "interactExclude",
          "VariableType": "String",
          "Description": "comma-separated list of interaction layers to not collide with",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lighting Origin",
          "InternalName": "lightingorigin",
          "VariableType": "TargetDestination",
          "Description": "Select an entity to specify a location to sample lighting from, instead of using this entity\u0027s origin.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Create Nav Obstacle",
          "InternalName": "CreateNavObstacle",
          "VariableType": "Bool",
          "Description": "Create a navigation obstacle to assist NPC pathfinding",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Force NPC Exclude",
          "InternalName": "forcenpcexclude",
          "VariableType": "Bool",
          "Description": "If set, NPC movement will ignore this prop",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Cloth Scale",
          "InternalName": "clothScale",
          "VariableType": "Float",
          "Description": "Cloth scale (stretch) relative to model scale. Use to stretch (not scale) the model, e.g. to reuse a single rope model when different lengths of the rope needed.",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "Enable",
          "Description": "Enable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Disable",
          "Description": "Disable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "StartGlowing",
          "Description": "Turn on a permanent glow effect for this prop.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "StopGlowing",
          "Description": "Turn off this prop\u0027s glow effect.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Alpha",
          "Description": "Set the sprite\u0027s alpha (0 - 255).",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Color",
          "Description": "Set the sprite\u0027s color (R G B).",
          "VariableType": "Color255",
          "Type": "Input"
        },
        {
          "Name": "SetDamageFilter",
          "Description": "Sets the entity to use as damage filter. Pass in an empty string to clear the damage filter.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillConstrained",
          "Description": "Removes this entity, all its children, and anything constrained to it, from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game. Parameter is the inflictor.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Break",
          "Description": "Breaks the breakable.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetHealth",
          "Description": "Sets a new value for the breakable\u0027s health. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "AddHealth",
          "Description": "Adds health to the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "RemoveHealth",
          "Description": "Removes health from the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetMass",
          "Description": "Set mass of this object.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "OnStartDeath",
          "Description": "Fired when this prop has begun dying (breaking) before other death-related callbacks.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnBreak",
          "Description": "Fired when this breakable breaks.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnHealthChanged",
          "Description": "Fired when the health of this breakable changes, passing the new value of health as a percentage of max health, from [0..1].",
          "VariableType": "Float",
          "Type": "Output"
        },
        {
          "Name": "OnTakeDamage",
          "Description": "Fired each time this breakable takes any damage.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Skin",
          "Description": "Changes the model skin to the specified number.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "DisableShadow",
          "Description": "Turn shadow off.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableShadow",
          "Description": "Turn shadow on.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AlternativeSorting",
          "Description": "Used to attempt to fix sorting problems when rendering. True activates, false deactivates",
          "VariableType": "Bool",
          "Type": "Input"
        },
        {
          "Name": "SetRenderAttribute",
          "Description": "Set the value of a render attribute used in material dynamic expressions. Examples: $myfloat=0.25 $myfloat4=1.0,0.0,1.0,1.0",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearRenderAttribute",
          "Description": "Remove a render attribute previously set by SetRenderAttribute, restoring it to its previous value.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "OnIgnite",
          "Description": "Fired when this object catches fire.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnDestructiblePartDestroyed",
          "Description": "",
          "VariableType": "Cpp",
          "Type": "Output"
        },
        {
          "Name": "SetParent",
          "Description": "Changes the entity\u0027s parent in the movement hierarchy.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachment",
          "Description": "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachmentMaintainOffset",
          "Description": "Change this entity to attach to a specific attachment point on it\u0027s parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it\u0027s position relative to the parent at the time it is attached.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearParent",
          "Description": "Removes this entity from the the movement hierarchy, leaving it free to move independently.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FollowEntity",
          "Description": "Bone merges this entity to a parent entity. Call again passing nothing to end the bone merge.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetAnimationLooping",
          "Description": "Force the prop to play an animation and force it to loop. The parameter should be the name of the animation.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetAnimationNoResetLooping",
          "Description": "Force the prop to play an animation and force it to loop unless the prop is already playing the animation. The parameter should be the name of the animation.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetIdleAnimationLooping",
          "Description": "Changes the Idle Animation to the one specified in the parameter and force it to loop.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetAnimationNotLooping",
          "Description": "Force the prop to play an animation and force it to not loop. The parameter should be the name of the animation.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetAnimationNoResetNotLooping",
          "Description": "Force the prop to play an animation and force it to not loop unless the prop is already playing the animation. The parameter should be the name of the animation.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetIdleAnimationNotLooping",
          "Description": "Changes the Idle Animation to the one specified in the parameter and force it to not loop.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetPlaybackRate",
          "Description": "Set the playback rate for the animation.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "SetBodyGroup",
          "Description": "Sets bodygroup. Format is \u0026lt;BodygroupName,index\u0026gt; ",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "TurnOn",
          "Description": "Make the prop visible.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "TurnOff",
          "Description": "Make the prop invisible.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableCollision",
          "Description": "Enable collision on the prop.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableCollision",
          "Description": "Disable collision on the prop.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetNavIgnore",
          "Description": "Enable and disable NAVIgnore on the prop.",
          "VariableType": "Bool",
          "Type": "Input"
        },
        {
          "Name": "SetAnimGraphParameter",
          "Description": "Set an animation graph parameter Format: \u0026lt;name=value\u0026gt;",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetRagdollProfile",
          "Description": "Sets the active ragdoll profile.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "OnAnimationBegun",
          "Description": "Fired whenever a new animation has begun playing.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationDone",
          "Description": "Fired whenever an animation is complete.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationReachedEnd",
          "Description": "Fired whenever a non-looping animation playing forward hits the end (cycle=1).",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationReachedStart",
          "Description": "Fired whenever a non-looping animation playing backward hits the beginning (cycle=0).",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationLoopCycleDone",
          "Description": "Fires off an event when the current cycle of a looped animation is complete.",
          "VariableType": "Void",
          "Type": "Output"
        }
      ]
    },
    {
      "Game": "steamvr",
      "EntityType": "Point",
      "Name": "prop_dynamic",
      "Description": "A prop that can be placed in hierarchy and can play animations and/or simulate cloth. It can also be configured to break when it takes enough damage. Note that the health of the object will be overridden by the health inside the model, to ensure consistent health game-wide. If the model used by the prop is configured to be used as a prop_physics (i.e. it should be physically simulated) then it CANNOT be used as a prop_dynamic. Upon level load it will display a warning in the console and remove itself. Use a prop_physics instead.",
      "IconPath": "",
      "PageAnnotation": null,
      "Properties": [
        {
          "FriendlyName": "Start Disabled",
          "InternalName": "StartDisabled",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow State",
          "InternalName": "glowstate",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "OFF",
              "Description": ""
            },
            {
              "Name": "\u002Buse",
              "Description": ""
            },
            {
              "Name": "look-at",
              "Description": ""
            },
            {
              "Name": "ON",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow Range",
          "InternalName": "glowrange",
          "VariableType": "Integer",
          "Description": "Range at which the glow becomes visible. (0 = always visible)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow Range Min",
          "InternalName": "glowrangemin",
          "VariableType": "Integer",
          "Description": "Range at which the glow stops being visible. (0 = always visible)",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Glow Color Override (R G B)",
          "InternalName": "glowcolor",
          "VariableType": "Color255",
          "Description": "Change the render color of the glow.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Render Mode",
          "InternalName": "rendermode",
          "VariableType": "Choices",
          "Description": "Used to set a non-standard rendering mode on this entity. See also \u0027FX Amount\u0027 and \u0027FX Color\u0027.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Color",
              "Description": ""
            },
            {
              "Name": "Texture",
              "Description": ""
            },
            {
              "Name": "Glow",
              "Description": ""
            },
            {
              "Name": "Solid",
              "Description": ""
            },
            {
              "Name": "Additive",
              "Description": ""
            },
            {
              "Name": "Additive Fractional Frame",
              "Description": ""
            },
            {
              "Name": "World Space Glow",
              "Description": ""
            },
            {
              "Name": "Dont Render",
              "Description": ""
            },
            {
              "Name": "Dev Visualizer",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Render FX",
          "InternalName": "renderfx",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "Slow Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Fast Wide Pulse",
              "Description": ""
            },
            {
              "Name": "Slow Strobe",
              "Description": ""
            },
            {
              "Name": "Fast Strobe",
              "Description": ""
            },
            {
              "Name": "Faster Strobe",
              "Description": ""
            },
            {
              "Name": "Slow Flicker",
              "Description": ""
            },
            {
              "Name": "Fast Flicker",
              "Description": ""
            },
            {
              "Name": "Slow Fade Away",
              "Description": ""
            },
            {
              "Name": "Fast Fade Away",
              "Description": ""
            },
            {
              "Name": "Slow Become Solid",
              "Description": ""
            },
            {
              "Name": "Fast Become Solid",
              "Description": ""
            },
            {
              "Name": "Constant Glow",
              "Description": ""
            },
            {
              "Name": "Distort",
              "Description": ""
            },
            {
              "Name": "Hologram (Distort \u002B fade)",
              "Description": ""
            },
            {
              "Name": "Cull By Distance (TEST)",
              "Description": ""
            },
            {
              "Name": "Spotlight FX",
              "Description": ""
            },
            {
              "Name": "Fade Near",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Amount (0 - 255)",
          "InternalName": "renderamt",
          "VariableType": "Integer",
          "Description": "The FX amount is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "FX Color (R G B)",
          "InternalName": "rendercolor",
          "VariableType": "Color255",
          "Description": "The FX color is used by the selected Render Mode.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable Receiving Shadows",
          "InternalName": "disablereceiveshadows",
          "VariableType": "Bool",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Light Group",
          "InternalName": "lightgroup",
          "VariableType": "String",
          "Description": "Will only be lit by lights affecting this group.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Start Fade Dist",
          "InternalName": "fademindist",
          "VariableType": "Float",
          "Description": "Distance at which the overlay starts to fade (\u0026lt;0 = subtract from fademaxdist).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "End Fade Dist",
          "InternalName": "fademaxdist",
          "VariableType": "Float",
          "Description": "Maximum distance at which the overlay is visible (0 = don\u0027t fade out).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Fade Scale",
          "InternalName": "fadescale",
          "VariableType": "Float",
          "Description": "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\u0027t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Render to Cubemaps",
          "InternalName": "rendertocubemaps",
          "VariableType": "Bool",
          "Description": "If true, this geometry renders into baked cube maps",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lightmap Static",
          "InternalName": "lightmapstatic",
          "VariableType": "Choices",
          "Description": "How this geometry influences baked lighting.",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            },
            {
              "Name": "Bounce Only",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum CPU Level",
          "InternalName": "mincpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (low)",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Maximum CPU Level",
          "InternalName": "maxcpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (high)",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Minimum GPU Level",
          "InternalName": "mingpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (very low)",
              "Description": ""
            },
            {
              "Name": "very low",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Maximum GPU Level",
          "InternalName": "maxgpulevel",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "default (high)",
              "Description": ""
            },
            {
              "Name": "very low",
              "Description": ""
            },
            {
              "Name": "low",
              "Description": ""
            },
            {
              "Name": "medium",
              "Description": ""
            },
            {
              "Name": "high",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable X360",
          "InternalName": "disableX360",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Damage Filter",
          "InternalName": "damagefilter",
          "VariableType": "TargetDestination",
          "Description": "Name of the filter entity that controls which entities can damage us.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Entity Scripts",
          "InternalName": "vscripts",
          "VariableType": "ScriptList",
          "Description": "Name(s) of script files that are executed after all entities have spawned.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Name",
          "InternalName": "targetname",
          "VariableType": "TargetSource",
          "Description": "The name that other entities refer to this entity by.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Damage",
          "InternalName": "ExplodeDamage",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \u0027Explosion Radius\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Explosion Radius",
          "InternalName": "ExplodeRadius",
          "VariableType": "Float",
          "Description": "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \u0027Explosion Damage\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Performance Mode",
          "InternalName": "PerformanceMode",
          "VariableType": "Choices",
          "Description": "Used to limit the amount of gibs produced when this entity breaks, for performance reasons.",
          "Options": [
            {
              "Name": "Normal",
              "Description": ""
            },
            {
              "Name": "No Gibs",
              "Description": ""
            },
            {
              "Name": "Full Gibs on All Platforms",
              "Description": ""
            },
            {
              "Name": "Reduced gibs",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "",
          "InternalName": "spawnflags",
          "VariableType": "Flags",
          "Description": "",
          "Options": [
            {
              "Name": "Break on Touch",
              "Description": ""
            },
            {
              "Name": "Break on Pressure",
              "Description": ""
            },
            {
              "Name": "Use Hitboxes for Renderbox",
              "Description": ""
            },
            {
              "Name": "Start with collision disabled",
              "Description": ""
            },
            {
              "Name": "Set to NAVIgnore",
              "Description": ""
            },
            {
              "Name": "Start Asleep",
              "Description": ""
            },
            {
              "Name": "Don\u0027t take physics damage",
              "Description": ""
            },
            {
              "Name": "Debris - Don\u0027t collide with the player or other debris",
              "Description": ""
            },
            {
              "Name": "Motion Disabled",
              "Description": ""
            },
            {
              "Name": "Enable motion on Physcannon grab (This also applies to the HLVR hand interaction)",
              "Description": ""
            },
            {
              "Name": "Not affected by rotor wash",
              "Description": ""
            },
            {
              "Name": "Generate output on \u002BUSE ",
              "Description": ""
            },
            {
              "Name": "Prevent pickup",
              "Description": ""
            },
            {
              "Name": "Prevent motion enable on player bump",
              "Description": ""
            },
            {
              "Name": "Debris with trigger interaction",
              "Description": ""
            },
            {
              "Name": "Force non-solid to players",
              "Description": ""
            },
            {
              "Name": "Enable \u002Buse glow effect",
              "Description": ""
            },
            {
              "Name": "Physgun can ALWAYS pick up. No matter what.",
              "Description": ""
            },
            {
              "Name": "Important Grabbity Glove target.",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Pressure Delay",
          "InternalName": "pressuredelay",
          "VariableType": "Float",
          "Description": "Delay, in seconds, after \u0027broken\u0027 by pressure before breaking apart (allows for sound to play before breaking apart).",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "World Model",
          "InternalName": "model",
          "VariableType": "Studio",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Skin",
          "InternalName": "skin",
          "VariableType": "MaterialGroup",
          "Description": "Some models have multiple versions of their textures, called skins.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Body Groups",
          "InternalName": "bodygroups",
          "VariableType": "BodyGroupChoices",
          "Description": "",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Disable Shadows",
          "InternalName": "disableshadows",
          "VariableType": "Bool",
          "Description": "Used to disable dynamic shadows on this entity.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Global Entity Name",
          "InternalName": "globalname",
          "VariableType": "String",
          "Description": "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\u0027s state copied over their state.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent",
          "InternalName": "parentname",
          "VariableType": "TargetDestination",
          "Description": "The name of this entity\u0027s parent in the movement hierarchy. Entities with parents move with their parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Parent Model Bone/Attachment Name",
          "InternalName": "parentAttachmentName",
          "VariableType": "ParentAttachment",
          "Description": "The name of the bone or attachment to attach to on the entity\u0027s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment position offset",
          "InternalName": "local.origin",
          "VariableType": "Vector",
          "Description": "Offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment angular offset",
          "InternalName": "local.angles",
          "VariableType": "Angle",
          "Description": "Angular offset in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Model Attachment scale",
          "InternalName": "local.scales",
          "VariableType": "Vector",
          "Description": "Scale in the local space of the parent model\u0027s attachment/bone to use in hierarchy. Not used if you are not using parent attachment.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Use Model Attachment Offset",
          "InternalName": "useLocalOffset",
          "VariableType": "Bool",
          "Description": "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Collisions",
          "InternalName": "solid",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "Not Solid",
              "Description": ""
            },
            {
              "Name": "Use axis-aligned box",
              "Description": ""
            },
            {
              "Name": "Use oriented Box",
              "Description": ""
            },
            {
              "Name": "Use VPhysics",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Turn Off in Low-Violence",
          "InternalName": "disablelowviolence",
          "VariableType": "Choices",
          "Description": "",
          "Options": [
            {
              "Name": "No",
              "Description": ""
            },
            {
              "Name": "Yes",
              "Description": ""
            }
          ],
          "Annotations": []
        },
        {
          "FriendlyName": "Default Animation",
          "InternalName": "DefaultAnim",
          "VariableType": "Sequence",
          "Description": "The name of the idle animation that this prop will revert to whenever it finishes a random or forced animation.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Randomly Animate",
          "InternalName": "RandomAnimation",
          "VariableType": "Bool",
          "Description": "If set, this prop will randomly choose and play animations, based upon the times specified in \u0027Min/Max Random Anim Time\u0027. Inbetween the random animations, it will revert to playing the \u0027Default Animation\u0027.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Hold Animation",
          "InternalName": "HoldAnimation",
          "VariableType": "Bool",
          "Description": "If set, the prop will not loop its animation, but hold the last frame.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Randomize cycle",
          "InternalName": "randomizecycle",
          "VariableType": "Bool",
          "Description": "If set, this prop will randomize its cycle when it begins animating. Use this to desynchronize animating props that use the same model.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Min Random Anim Time",
          "InternalName": "MinAnimTime",
          "VariableType": "Float",
          "Description": "Minimum time between random animations.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Max Random Anim Time",
          "InternalName": "MaxAnimTime",
          "VariableType": "Float",
          "Description": "Maximum time between random animations.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lag Compensation",
          "InternalName": "LagCompensate",
          "VariableType": "Bool",
          "Description": "Enable to lag compensate this prop, should be use very sparingly!",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Animate on server in multiplayer",
          "InternalName": "AnimateOnServer",
          "VariableType": "Bool",
          "Description": "Enable this to animate on the server in multiplayer games, such as for props with triggers parented to attachment points. Use sparingly as there is a performance cost.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Scripted Movement",
          "InternalName": "ScriptedMovement",
          "VariableType": "Bool",
          "Description": "Set this to allow vscript code to move the prop via SetVelocity() calls.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Initial Velocity",
          "InternalName": "velocity",
          "VariableType": "Vector",
          "Description": "Only used if Scripted Movement is set, sets an initial linear velocity for the entity.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Initial Rotational Velocity",
          "InternalName": "avelocity",
          "VariableType": "Vector",
          "Description": "Only used if Scripted Movement is set, sets an initial rotational velocity for the entity.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Lighting Origin",
          "InternalName": "lightingorigin",
          "VariableType": "TargetDestination",
          "Description": "Select a path_corner entity to specify a location to sample lighting from, instead of using this entity\u0027s origin.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Update children",
          "InternalName": "updatechildren",
          "VariableType": "Bool",
          "Description": "Update touches for any children that are attached to attachment points as this prop animates. This allows SetParentAttached triggers or func_brushes to touch properly.",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Allow Animgraph",
          "InternalName": "use_animgraph",
          "VariableType": "Bool",
          "Description": "Allow this entity to use its animgraph",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Create Nav Obstacle",
          "InternalName": "CreateNavObstacle",
          "VariableType": "Bool",
          "Description": "Create a navigation obstacle to assist NPC pathfinding",
          "Options": [],
          "Annotations": []
        },
        {
          "FriendlyName": "Cloth Scale",
          "InternalName": "clothScale",
          "VariableType": "Float",
          "Description": "Cloth scale (stretch) relative to model scale. Use to stretch (not scale) the model, e.g. to reuse a single rope model when different lengths of the rope needed.",
          "Options": [],
          "Annotations": []
        }
      ],
      "InputOutputs": [
        {
          "Name": "Enable",
          "Description": "Enable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Disable",
          "Description": "Disable this entity.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "StartGlowing",
          "Description": "Turn on a permanent glow effect for this prop.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "StopGlowing",
          "Description": "Turn off this prop\u0027s glow effect.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "Alpha",
          "Description": "Set the sprite\u0027s alpha (0 - 255).",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "Color",
          "Description": "Set the sprite\u0027s color (R G B).",
          "VariableType": "Color255",
          "Type": "Input"
        },
        {
          "Name": "SetDamageFilter",
          "Description": "Sets the entity to use as damage filter. Pass in an empty string to clear the damage filter.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptFile",
          "Description": "Load and execute a script file",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "RunScriptCode",
          "Description": "Execute a fragment of script code",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallScriptFunction",
          "Description": "Call a script function",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallPrivateScriptFunction",
          "Description": "Calls a script function from this entity\u0027s private script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "CallGlobalScriptFunction",
          "Description": "Calls a script function in the global script scope.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "Kill",
          "Description": "Removes this entity from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "KillHierarchy",
          "Description": "Removes this entity and all its children from the world.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AddOutput",
          "Description": "Adds an entity I/O connection to this entity. Parameter format: outputname\u0026gt;targetname\u003Einputname\u0026gt;parameter\u0026gt;delay\u0026gt;max times to fire (-1 == infinite). Very dangerous, use with care.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "FireUser1",
          "Description": "Causes this entity\u0027s OnUser1 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser2",
          "Description": "Causes this entity\u0027s OnUser2 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser3",
          "Description": "Causes this entity\u0027s OnUser3 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "FireUser4",
          "Description": "Causes this entity\u0027s OnUser4 output to be fired.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnUser1",
          "Description": "Fired in response to FireUser1 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser2",
          "Description": "Fired in response to FireUser2 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser3",
          "Description": "Fired in response to FireUser3 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnUser4",
          "Description": "Fired in response to FireUser4 input.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnKilled",
          "Description": "Fired when the entity is killed and removed from the game.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Break",
          "Description": "Breaks the breakable.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetHealth",
          "Description": "Sets a new value for the breakable\u0027s health. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "AddHealth",
          "Description": "Adds health to the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "RemoveHealth",
          "Description": "Removes health from the breakable. If the breakable\u0027s health reaches zero it will break.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "SetMass",
          "Description": "Set mass of this object.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "OnBreak",
          "Description": "Fired when this breakable breaks.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnHealthChanged",
          "Description": "Fired when the health of this breakable changes, passing the new value of health as a percentage of max health, from [0..1].",
          "VariableType": "Float",
          "Type": "Output"
        },
        {
          "Name": "EnablePhyscannonPickup",
          "Description": "Makes the breakable able to picked up by the physcannon.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisablePhyscannonPickup",
          "Description": "Makes the breakable not able to picked up by the physcannon.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "OnTakeDamage",
          "Description": "Fired each time this breakable takes any damage.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysCannonDetach",
          "Description": "Fired when the physcannon has ripped this breakable off of the wall. Only fired if ACT_PHYSCANNON_DETACH is defined in the model this breakable is using.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysCannonAnimatePreStarted",
          "Description": "Fired when this prop starts playing the Pre physcannon-pull activity, caused by the player trying to grab this prop with the physcannon. Only fired if the ACT_PHYSCANNON_ANIMATE_PRE activity is defined in the model this breakable is using.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysCannonAnimatePullStarted",
          "Description": "Fired when this prop starts playing the physcannon-pull activity, caused by the player trying to grab this prop with the physcannon. Only fired if the ACT_PHYSCANNON_ANIMATE activity is defined in the model this breakable is using. If the prop has Pre pull anim, this will be fired after the Pre anim has finished playing.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysCannonPullAnimFinished",
          "Description": "Fired when this prop has finished playing the physcannon-pull activity, caused by the player trying to grab this prop with the physcannon. Only fired if the ACT_PHYSCANNON_ANIMATE activity is defined in the model this breakable is using. If the prop has Pre \u0026 Post pull anims, this will be fired after the Post anim has finished playing.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnPhysCannonAnimatePostStarted",
          "Description": "Fired when this prop starts playing the Post physcannon-pull activity. Only fired if the ACT_PHYSCANNON_ANIMATE_POST activity is defined in the model this breakable is using.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "Skin",
          "Description": "Changes the model skin to the specified number.",
          "VariableType": "Integer",
          "Type": "Input"
        },
        {
          "Name": "DisableShadow",
          "Description": "Turn shadow off.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableShadow",
          "Description": "Turn shadow on.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "AlternativeSorting",
          "Description": "Used to attempt to fix sorting problems when rendering. True activates, false deactivates",
          "VariableType": "Bool",
          "Type": "Input"
        },
        {
          "Name": "SetRenderAttribute",
          "Description": "Set the value of a render attribute used in material dynamic expressions. Examples: $myfloat=0.25 $myfloat4=1.0,0.0,1.0,1.0",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "OnIgnite",
          "Description": "Fired when this object catches fire.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "SetParent",
          "Description": "Changes the entity\u0027s parent in the movement hierarchy.",
          "VariableType": "TargetDestination",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachment",
          "Description": "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetParentAttachmentMaintainOffset",
          "Description": "Change this entity to attach to a specific attachment point on it\u0027s parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it\u0027s position relative to the parent at the time it is attached.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "ClearParent",
          "Description": "Removes this entity from the the movement hierarchy, leaving it free to move independently.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetAnimation",
          "Description": "Force the prop to play an animation. The parameter should be the name of the animation.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetAnimationNoReset",
          "Description": "Force the prop to play an animation unless the prop is already playing the animation. The parameter should be the name of the animation.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetAnimationTransition",
          "Description": "Force the prop to play an animation. The parameter should be the name of the animation. The second animation is the name of the animation it\u0027s transitioning from. If that one is still playing it\u0027ll just reverse from the current frame.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetDefaultAnimation",
          "Description": "Set the Default Animation to the one specified in the parameter.",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "SetPlaybackRate",
          "Description": "Set the playback rate for the animation.",
          "VariableType": "Float",
          "Type": "Input"
        },
        {
          "Name": "SetBodyGroup",
          "Description": "Sets bodygroup. Format is \u0026lt;BodygroupName,index\u0026gt; ",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "TurnOn",
          "Description": "Make the prop visible.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "TurnOff",
          "Description": "Make the prop invisible.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "EnableCollision",
          "Description": "Enable collision on the prop.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "DisableCollision",
          "Description": "Disable collision on the prop.",
          "VariableType": "Void",
          "Type": "Input"
        },
        {
          "Name": "SetNavIgnore",
          "Description": "Enable and disable NAVIgnore on the prop.",
          "VariableType": "Bool",
          "Type": "Input"
        },
        {
          "Name": "SetAnimGraphParameter",
          "Description": "Set an animation graph parameter Format: \u0026lt;name=value\u0026gt;",
          "VariableType": "String",
          "Type": "Input"
        },
        {
          "Name": "OnAnimationBegun",
          "Description": "Fired whenever a new animation has begun playing.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationDone",
          "Description": "Fired whenever an animation is complete.",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationReachedEnd",
          "Description": "Fired whenever a non-looping animation playing forward hits the end (cycle=1).",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationReachedStart",
          "Description": "Fired whenever a non-looping animation playing backward hits the beginning (cycle=0).",
          "VariableType": "Void",
          "Type": "Output"
        },
        {
          "Name": "OnAnimationLoopCycleDone",
          "Description": "Fires off an event when the current cycle of a looped animation is complete.",
          "VariableType": "Void",
          "Type": "Output"
        }
      ]
    }
  ]
}